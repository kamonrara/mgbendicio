{"version":3,"sources":["constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/styles.js","components/Pagination.jsx","components/Home/styles.js","components/Home/Home.js","components/Navbar/NavigationBar.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","actions/users.js","components/User/styles.js","components/User/Input.js","components/User/Profile.js","actions/chat/message.js","actions/chat/conversation.js","service/socket.js","components/Chat/Conversation.js","components/Chat/Messages.js","components/Chat/Message.js","components/User/UserList.js","components/Chat/Input.js","components/Chat/Chat.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.jsx","App.js","reducers/auth.js","reducers/index.js","reducers/chat/conversations.js","reducers/chat/conversations-conversation-id.js","reducers/chat/messages.js","reducers/posts.js","reducers/users.js","index.js"],"names":["LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","likePost","patch","comment","value","post","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp","updateUser","updatedUser","fetchConversation","userId","fetchMessages","conversationId","getPostsBySearch","searchquery","dispatch","a","type","searchQuery","search","tags","data","payload","console","log","createPost","history","newPost","push","_id","api","user","commentPost","comments","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","cardAction","textAlign","Post","setCurrentId","useDispatch","classes","useStyles","useHistory","useState","likes","setLikes","result","googleId","hasLikedPost","find","like","handleLikesEvent","filter","Likes","length","fontSize","Card","className","raised","elevation","ButtonBase","component","onClick","CardMedia","image","selectedFile","Typography","variant","owner","moment","createdAt","fromNow","creator","Button","style","size","map","tag","gutterBottom","CardContent","message","CardActions","disabled","undefined","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","Posts","useSelector","state","posts","isLoading","CircularProgress","Grid","container","key","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","useEffect","clear","handleSubmit","e","preventDefault","firstname","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","onChange","target","multiline","rows","split","multiple","onDone","base64","align","ul","Paginate","numberOfPages","getPosts","Pagination","count","Number","renderItem","PaginationItem","Link","to","appBarSearch","pagination","marginTop","gridContainer","breakpoints","down","mainDiv","Home","query","URLSearchParams","useLocation","setSearch","setTags","searchPost","trim","join","Grow","in","Container","maxWidth","justify","AppBar","onKeyPress","keyCode","onAdd","onDelete","tagToDelete","searchButton","siteTitle","fontWeight","letterSpacing","toolbar","up","menuBox","menuOption","paddingLeft","menuIcon","heading","fontFamily","marginLeft","profile","userName","avatar","leftDiv","rightDiv","paddingRight","mobileBox","mobileHeading","NavigationBar","setUser","location","logout","actionType","decode","exp","Date","getTime","toggleMenu","toggleMenuOpen","setState","setResponsiveness","window","innerWidth","prevState","addEventListener","getToggleMenuOptions","Box","Divider","Toolbar","IconButton","Drawer","anchor","open","onClose","Avatar","alt","src","imageUrl","charAt","palette","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","router","signin","prevIsSignup","float","defaultValue","lastname","Profile","currentUserId","getMessages","getConversation","setConversationWith","socket","io","overflowY","purple","deepPurple","Label","paddingBottom","UserContent","Conversation","conversation","conversations","conversation_data","conversation_id","conversation_name","conversationData","setConversationData","fuck","stringify","d","removeQoute","replace","includes","pop","conversation_with","updatingFlag","setUpdatingFlag","on","inputRef","useRef","current","click","ref","Messages","justifyContentVal","setJustifyContentVal","setBackgroundColor","currentUser","background","content","scrollFeed","Message","messages","typing","SetTyping","emitMessageRespond","setEmitMessageRespond","userLink","ctr","UserList","userlist","users","participants","setParticipants","error","messageTextfield","sendButton","messsageData","setMessageData","setKeyPressCount","lastMessageId","conAndMsgData","myMessage","setMyMessage","handleMessage","prev","newMessage","emit","conversationAndMessage","newConversationAndMessage","messageBody","controller","messagePaper","Chat","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","marginRight","CommentSection","commentsRef","setComments","setComment","handleClick","finalComment","newComments","scrollIntoView","behavior","c","i","PostDetails","useParams","getPost","cursor","openPost","App","path","exact","Auth","authReducer","authData","action","setItem","loading","errors","combineReducers","auth","currentPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ea897b9.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH = 'FETCH';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const LIKE = 'LIKE';\nexport const COMMENT = 'COMMENT';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\n//USERS\nexport const FETCH_USERS = 'FETCH_USERS';\n\n//POSTS\nexport const FETCH_POST = 'FETCH_POST';\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\n//CONVERSATION\nexport const FETCH_CONVERSATION = 'FETCH_CONVERSATION';\nexport const FETCH_CONVERSATIONS = 'FETCH_CONVERSATIONS';\nexport const SET_CONVERSATION_ID = 'SET_CONVERSATION';\nexport const GET_CONVERSATION_ID = 'GET_CONVERSATION';\nexport const SET_CONVERSATION_WITH = 'SET_CONVERSATION_WITH';\nexport const CREATE_CONVERSATION = 'CREATE_CONVERSATION';\nexport const CREATE_CONVERSATION_AND_MESSAGE = 'CREATE_CONVERSATION_AND_MESSAGE';\nexport const RESET_CONVERSATION_DATA = 'RESET_CONVERSATION_DATA';\n\n//MESSAGE\nexport const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\n\n//NEW\nexport const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\n","import axios from 'axios';\n \n//cloud\n// const API = axios.create({ baseURL: 'https://merntradebaits.herokuapp.com/' });\n\n//local\nconst API = axios.create({ baseURL: 'http://localhost:5555' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\n\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`) // query params starts with question mark\n\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/users/signin', formData);\nexport const signUp = (formData) => API.post('/users/signup', formData);\n\nexport const fetchUsers = () => API.get('/users');\nexport const updateUser = (id, updatedUser) => API.patch(`/users/profile/${id}`, updatedUser);\n\nexport const fetchConversation = (userId) => API.get(`/chat/conversations/${userId}`);\n\nexport const createConversation = (newConversation) => API.post('/chat/conversations', newConversation);\nexport const createConversationAndMessage = (newConversationAndMessage) => API.post('/chat/conversations', newConversationAndMessage);\n\nexport const fetchMessages = (conversationId) => API.get(`/chat/messages/${conversationId}`);\nexport const createMessage = (newMessage) => API.post('/chat/messages', newMessage);\n\n\n","import { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE, FETCH, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH, payload: data});\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log('client>src>action>posts>getPost ERROR: ', error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPosts(page);\n    \n    dispatch({ type: FETCH_POSTS, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log('client>src>action>posts>getPosts: ', error);\n  }\n};\n\nexport const getPostsBySearch = (searchquery) => async (dispatch) => {\n\n  try {\n    dispatch({ type: START_LOADING });\n    //destructure 2 times\n    const { data: { data } } = await api.fetchPostsBySearch(searchquery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n\n\n  } catch(error) {\n\n    console.log('getPostsBySearch error: ', error)\n  }\n}\n//accept the history object that came from the front end\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n    history.push(`/posts/${data._id}`)\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n\n    const { data } = await api.updatePost(id, post);\n    \n    //console.log('action/action/updatePost payload data: ', data);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try{\n  \n    const { data } = await api.comment(value, id);\n    //we are expecting that this data, if front end send a correct data ,\n    //that means that this data should return a new post, and\n    //that post should have that comments on array, and it should have that comment that the user typed in\n    console.log('WARARARARAR:::: ', data)\n    dispatch({ type: COMMENT, payload: data});\n\n    //return the newest commetns thats coming in\n    return data.comments;\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n      await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cardAction: {\n    display: 'block',\n    textAlign: 'initial',\n  },\n});\n","import React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom';\n\n\n// import io from 'socket.io-client';\n// let socket;\n// const ENDPOINT = 'localhost:5555';\n\nconst Post = ({ post, setCurrentId }) => {\n\n  // message debugger...\n  // console.log('[POST] ', post);\n\n  //THIS SELECTOR WILL FIND THE UPDATED POST AND RE-RENDER THE UPDATED DATA..\n  //const updatedPost = useSelector((state) => (state.posts.find((post) => post._id === post._id)));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  //socket = io(ENDPOINT);\n  const [like, setLike] = useState(false);\n  const [likes, setLikes] = useState(post?.likes);\n\n\n  // useEffect(() => {\n  //     console.log(\n  //       '-[POST] 1ST useEffect ','\\n',\n  //       'likes: ', post.likes.length,'\\n',\n  //       'title', post.title\n  //       );\n\n  // },[post]);\n\n\n  // useEffect(() => {\n\n  //   console.log(\n  //     '-[POST] 2ND useEffect ','\\n',\n  //     'likes: ', post.likes.length,'\\n',\n  //     'title:', post.title\n  //     );\n\n  //     socket.on('updateLike', () => {\n  //     console.log('-[POST] ',\n  //     '2ND  useEffect when like is clicked => received => dataFrom => server => io.emit.');\n  //     setLike(true);\n   \n  //   });\n  // }, []); \n\n  const userId = user?.result.googleId || user?.result?._id\n  const hasLikedPost = post.likes.find((like) => like === userId);\n\n  const handleLikesEvent = async () => {\n         dispatch(likePost(post._id));\n\n          //did the current user like the post or not.\n         if (hasLikedPost) {\n          setLikes(post.likes.filter((id) => id !== userId));\n\n         } else {\n            setLikes([ ...post.likes, userId]);\n         }\n  }\n\n  const Likes = () => { \n\n      if (likes.length > 0) {\n        return likes.find((like) => like === userId)\n          ? (\n            <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}` }</>\n          ) : (\n            <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}</>\n          );\n      }    \n\n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;    \n  };\n\n  const openPost = () => history.push(`/posts/${post._id}`);\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase\n       component=\"span\"\n       className={classes.cardAction} \n       onClick={openPost}\n       >\n          <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n          <div className={classes.overlay}>\n            <Typography variant=\"h6\">{post.owner}</Typography>\n            <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n          </div>\n          {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n          <div className={classes.overlay2}>\n            <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n              <MoreHorizIcon fontSize=\"default\" />\n            </Button>\n          </div>\n          )}\n          <div className={classes.details}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n          </div>\n          <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n          </CardContent>\n      </ButtonBase>\n      <CardActions className={classes.cardActions}>\n        {/* <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}> */}\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLikesEvent}>\n\n          <Likes /> \n        </Button>\n        {/* {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && ( */}\n        {(user?.result?._id !== undefined && user?.result?._id === post?.creator) && (\n        <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n\n  const classes = useStyles();\n  const { posts, isLoading } = useSelector((state) => state.posts);\n\n  // console.log('[POSTS] useSelector posts: ', posts);\n\n\n  if(!posts.length && !isLoading) return 'No posts'\n\n  return (\n    isLoading ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts?.map((post) => (\n          <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n\n\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom';\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n  const [postData, setPostData] = useState({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null)) ;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, owner: user?.result?.firstname }, history));\n      // do not call the history here like <history.push>\n      clear();\n    } else {\n      \n      dispatch(updatePost(currentId, { ...postData, owner: user?.result?.firstname}));\n      clear();\n    }\n  };\n\n  if (!user?.result?._id) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload photo/s \n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Post'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    ul: {\r\n         justifyContent: 'space-around'\r\n\r\n    }\r\n}))","import React, { useEffect } from 'react'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPosts } from '../actions/posts';\r\n\r\nconst Paginate = ({ page }) => {\r\n\r\n    const { numberOfPages } = useSelector((state) => state.posts)\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(page) dispatch(getPosts(page));\r\n\r\n      }, [page]);\r\n\r\n    return (\r\n        <Pagination\r\n            classes={{ ul: classes.ul }}\r\n            count={numberOfPages}\r\n            page={Number(page) || 1}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            renderItem={(item) => (\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Paginate;","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: '1rem',\r\n    padding: '16px',\r\n  },\r\n\r\n  gridContainer: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column-reverse',\r\n      },\r\n  },\r\n\r\n  mainDiv: {\r\n    display: 'flex'\r\n  },\r\n\r\n\r\n}));","\nimport React, { useState } from 'react';\nimport { Container, Grow, Grid , Paper, AppBar, TextField, Button} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { getPostsBySearch } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport Pagination from '../Pagination'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport useStyles from './styles';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n  const classes = useStyles();\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const query = useQuery();\n  const history = useHistory();\n  const page = query.get('page') || 1;\n  const searchQuery = query.get('searchQuery');\n\n  const [search, setSearch] = useState('');\n  const [tags, setTags] = useState([]);\n\n  // useEffect(() => {\n  //   dispatch(getPosts());\n  \n  // }, [currentId, dispatch]);\n\n    const searchPost = () => {\n      if(search.trim() || tags) {\n        //dispatch -> fetch search posts\n        dispatch(getPostsBySearch({search, tags:  tags.join(',')  }));\n        history.push(`/posts/search?searchQuery=${search || 'none'} &tags=${tags.join(',')}`);\n      } else {\n        history.push('/')\n      }\n    }\n\n    const handleKeyPress = (e) => {\n      if(e.keyCode === 13) {\n        searchPost();\n      }\n    }\n\n    const handleAdd = (tag) => setTags([... tags, tag]);\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag) => tag !== tagToDelete));\n\n  return (\n    <Grow in>\n      <Container maxWidth=\"xl\">\n        <Grid container justify= \"space-between\" alignItems=\"stretch\"  spacing={3} className={classes.gridContainer} >\n          <Grid item xs={12} sm={6} md={9} >\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n          <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\"> \n            <TextField \n              name=\"search\" \n              variant=\"outlined\" \n              label=\"Search Posts\" \n              fullWidth\n              value={search} \n              onChange={(e) => setSearch(e.target.value)} \n              onKeyPress={handleKeyPress}\n            />\n            <ChipInput \n              style={{ margin: '10px 0'}}\n              value={tags}\n              onAdd={handleAdd}\n              onDelete={handleDelete}\n              label=\"Search Hash Tags\"\n              variant=\"outlined\"\n            />\n\n            <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\n\n          </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n\n            {(!searchQuery && !tags.length) && (\n              <Paper elevation={6} className={classes.pagination}>\n              <Pagination page={page} />\n            </Paper>\n            )}\n\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Toolbar, Typography, Box, AppBar, IconButton, Drawer, Button, Avatar, Divider } from '@material-ui/core'; \r\nimport MenuIcon   from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport * as actionType from '../../constants/actionTypes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  siteTitle: {\r\n    fontWeight: 'bold',\r\n    letterSpacing: 1.5\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#6db4e3',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between'\r\n    }\r\n  },\r\n  menuBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row'\r\n    }\r\n  },\r\n  menuOption: {\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: theme.spacing(10)\r\n    },\r\n    color: 'white'\r\n  },\r\n  menuIcon: {\r\n    color: 'white',\r\n    fontSize: '33px'\r\n  },\r\n  heading: {\r\n      display: 'flex',\r\n      fontFamily: 'Segoe UI',\r\n      marginLeft: '33px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    fontFamily: 'Segoe UI',\r\n    alignItems: 'center',\r\n    padding : '11px 11px 11px 11px'\r\n  },\r\n  avatar: {\r\n    padding : '11px 11px 11px 11px',\r\n    color: 'gray',\r\n    backgroundColor: 'white',\r\n  },\r\n  leftDiv: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    paddingLeft: '33px'\r\n  },\r\n  rightDiv: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingRight: '3em',\r\n  },\r\n  mobileBox: {\r\n    display: 'flex'\r\n  },\r\n  mobileHeading: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    fontFamily: 'Segoe UI',\r\n  }\r\n  \r\n}));\r\n\r\nexport default function NavigationBar() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n  \r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n        history.push('/auth');\r\n        setUser(null);\r\n      };\r\n\r\n      useEffect(() => {\r\n        const token = user?.token;\r\n    \r\n        if (token) {\r\n          const decodedToken = decode(token);\r\n          if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n    \r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n      }, [location]);\r\n  \r\n  const [state, setState] = useState({\r\n    toggleMenu: false,\r\n    toggleMenuOpen: false\r\n  });\r\n  \r\n  const { toggleMenu, toggleMenuOpen } = state;\r\n  \r\n  useEffect(() => {\r\n    \r\n    const setResponsiveness = () => {\r\n      \r\n      return window.innerWidth < 960\r\n        ? setState((prevState) => ({ ...prevState, toggleMenu: true }))\r\n        : setState((prevState) => ({ ...prevState, toggleMenu: false}));\r\n      \r\n    };\r\n    \r\n    setResponsiveness();\r\n    \r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n    \r\n  }, []);\r\n\r\n  //mobile\r\n  const displayToggleMenu = () => {\r\n    \r\n    const handleToggleMenuOpen = ()  =>  setState((prevState) => ({ ...prevState,  toggleMenuOpen: true })); \r\n    const handleToggleMenuClose = () => setState((prevState) => ({ ...prevState, toggleMenuOpen: false }));\r\n    \r\n    return (\r\n      <Toolbar style={{ backgroundColor: '#6db4e3'}}>\r\n        <IconButton {...{ onClick: handleToggleMenuOpen }}>\r\n          <MenuIcon className={classes.menuIcon}/>\r\n        </IconButton>\r\n      \r\n        <Drawer {...{\r\n            anchor: 'left',\r\n            open: toggleMenuOpen,\r\n            onClose: handleToggleMenuClose\r\n          }}\r\n        >\r\n\r\n          <div>{ getToggleMenuOptions() }</div>\r\n        </Drawer>\r\n      \r\n      </Toolbar>\r\n    );\r\n  }\r\n\r\n  const getToggleMenuOptions = () => {\r\n    return ( \r\n      <Box className={classes.mobileBox}>\r\n            {user?.result ? (\r\n               <div>\r\n                  <Button component={Link} to=\"/\" className={classes.mobileHeading}>Home</Button> \r\n                  <Button component={Link} to=\"/chat\" className={classes.mobileHeading}>Messenger</Button> \r\n                   <Divider style={{ marginBottom: '11px'}}/>\r\n                  <Typography className={classes.mobileHeading} variant=\"h6\">{user?.result.firstname}</Typography>\r\n                  <Button variant=\"contained\" style={{ display: 'flex', fontFamily: 'Segoe UI'}} color=\"secondary\" onClick={logout}>Logout</Button>\r\n              </div>\r\n            ):(\r\n                <div>\r\n                   <Button component={Link} to=\"/\" className={classes.mobileHeading}>Home</Button> \r\n                   <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\" style={{ fontFamily: 'Segoe UI'}}>Sign In</Button>\r\n                </div>\r\n            )}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  //desktop\r\n  const displayLargeMenu = () => {\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n           <Box className={classes.menuBox}>\r\n            <AcUnitIcon style={{ fontSize: '33px'}}/>\r\n            <Button component={Link} to=\"/\" className={classes.heading}>Home</Button> \r\n            {(user?.result)  && (           \r\n            <Button component={Link} to=\"/chat\" className={classes.heading}>Messenger</Button> \r\n            )}\r\n           </Box>\r\n\r\n          <Box className={classes.menuBox}>\r\n            <div className={classes.rightDiv}>\r\n                {user?.result ? \r\n                 (\r\n                  <div className={classes.profile}>\r\n                    <Avatar className={classes.avatar} alt={user?.result.firstname} src={user?.result.imageUrl}>{user?.result.firstname.charAt(0)}</Avatar>\r\n                    <Typography className={classes.userName} variant=\"h6\">{user?.result.firstname}</Typography>\r\n                    <Button variant=\"contained\" style={{ fontFamily: 'Segoe UI'}} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                  </div>\r\n                    // <div>\r\n                    //     <Button component={Link} to=\"/chat\" className={classes.heading}>Messenger</Button> \r\n                    // </div>\r\n                ) : (\r\n                    <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\" style={{ fontFamily: 'Segoe UI'}}>Sign In</Button>\r\n                )} \r\n            </div>\r\n           \r\n          </Box>\r\n        </Toolbar>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Container>\r\n      <AppBar> \r\n        { toggleMenu ? displayToggleMenu() : displayLargeMenu() }\r\n      </AppBar>\r\n    </Container>\r\n  );\r\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n// import { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"Firstname\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Lastname\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          {/* <GoogleLogin\n            clientId=\"67355013266-7mehrhtmnqjdn9al2i76190hsjfc3dic.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          /> */}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/posts');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { FETCH_USERS, UPDATE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.fetchUsers();\r\n\r\n      dispatch({ type: FETCH_USERS, payload: data });\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.updateUser(id, user);\r\n       dispatch({ type: UPDATE, payload: data});\r\n     \r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n    float: 'right'\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\r\nimport { TextField, Grid } from '@material-ui/core';\r\n\r\nconst Input = ({ name, onChange, label, half, autoFocus, type, value }) => (\r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField \r\n          type={type}     \r\n          name={name}\r\n          defaultValue = {value}\r\n          onChange={onChange}          \r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth       \r\n          label={label}\r\n          autoFocus={autoFocus}\r\n           \r\n        />\r\n    </Grid>\r\n);\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Paper, Grid, Typography, Container, Grow } from '@material-ui/core';\r\nimport { updateUser } from '../../actions/users';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstname: '', lastname: '', email: '' };\r\n\r\nconst Profile = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const currentUserId = user?.result?._id;\r\n    const email = user?.result?.email;\r\n    const firstname = user?.result?.firstname;\r\n    const lastname = user?.result?.lastname;\r\n\r\n    console.log('[PROFILE] currentUserId: ', currentUserId);\r\n    console.log('[PROFILE] handleSubmit/localStorage-email: ', email);\r\n    console.log('[PROFILE] handleSubmit/localStorage-firstname: ', firstname);\r\n    console.log('[PROFILE] handleSubmit/localStorage-lastname: ', lastname);\r\n  \r\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(updateUser(currentUserId, {...form, firstName: user?.result?.firstname}));\r\n        dispatch(updateUser(currentUserId, form));\r\n    }\r\n\r\n    return(\r\n      <Grow in>    \r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\"> Update Profile </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>      \r\n              <Input name=\"firstname\" label=\"Firstname\"  value={firstname} onChange={handleChange}  half />\r\n              <Input name=\"lastname\" label=\"Lastname\" value={lastname}  onChange={handleChange} half />                    \r\n              <Input name=\"email\" label=\"Email Address\" value={email}  onChange={handleChange} type=\"email\" />\r\n\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              UPDATE\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n      </Grow>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { FETCH_MESSAGES, CREATE_MESSAGE, RESET_MESSAGES } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n// import history from '../../history';\r\n\r\nexport const getMessages = conversationId => async dispatch => {\r\n        // console.log('PAKI CHECK PO PLEASE: ', conversationId)\r\n    try {\r\n        const { data } = await api.fetchMessages(conversationId);\r\n\r\n        dispatch({ type: FETCH_MESSAGES, payload: data});\r\n       // history.push('/chat');\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR]-redux-action-chat-message: ', error.name);\r\n    }\r\n};\r\n\r\nexport const createMessage = message => async dispatch => {\r\n    try {\r\n        const { data } = await api.createMessage(message);\r\n        dispatch({ type: CREATE_MESSAGE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('action-createMessage error: ',error);\r\n    }\r\n};\r\n\r\nexport const resetMessages = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_MESSAGES});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n","import { FETCH_CONVERSATION, SET_CONVERSATION_ID, SET_CONVERSATION_WITH, CREATE_CONVERSATION, CREATE_CONVERSATION_AND_MESSAGE, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n\r\nexport const resetConversationData  = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_CONVERSATION_DATA});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n};\r\n\r\nexport const getConversation = (userId) => async (dispatch) => {\r\n    \r\n    try {\r\n        const { data } = await api.fetchConversation(userId);\r\n  \r\n        dispatch({ type: FETCH_CONVERSATION, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-GET-CONVERSATION]', error.name);\r\n    }\r\n};\r\n\r\nexport const createConversation = (conversation) => async (dispatch) => {\r\n\r\n    try {\r\n        const { data } = await api.createConversation(conversation);\r\n\r\n        dispatch({ type: CREATE_CONVERSATION, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION]', error.name);\r\n    }\r\n\r\n}\r\nexport const createConversationAndMessage = (conversationAndMessage) => async (dispatch) => {\r\n        // console.log('redux/action: conversationAndMessage <outside-try>: ', conversationAndMessage);\r\n    try {\r\n        const { data } = await api.createConversationAndMessage(conversationAndMessage);\r\n\r\n        // console.log('redux/action: conversationAndMessage <inside-try> : newly generated conversation ID: ', data._id)\r\n        dispatch({ type: CREATE_CONVERSATION_AND_MESSAGE, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION-AND-MESSAGE]', error.name);\r\n    }\r\n\r\n}\r\n\r\nexport const setConversationId = (payload) =>  {\r\n    return {\r\n        type: SET_CONVERSATION_ID,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setConversationWith = (payload) => {\r\n    return {\r\n        type: SET_CONVERSATION_WITH,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n","import io from \"socket.io-client\";\r\nexport const socket = io('localhost:5555');","import { CircularProgress, Link, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport { setConversationId, setConversationWith } from '../../actions/chat/conversation';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport { socket } from '../../service/socket';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    mainContainer: {\r\n      overflowY: 'auto',\r\n      backgroundColor: '#FFFFFF',\r\n      padding: '11px 11px 11px 11px'\r\n    },\r\n    purple: {\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n      fontFamily: 'Segoe UI',\r\n      paddingBottom: '9px'\r\n\r\n    },\r\n    UserContent: {\r\n      display: 'flex',\r\n      fontWeight: 'bold',\r\n      fontFamily: 'Segoe UI',\r\n      paddingLeft: '9px'\r\n  },\r\n  \r\n  });\r\n\r\nconst Conversation = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const conversation = useSelector((state) => state.conversations);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n    const conversationId = conversation_data?.conversation_id; \r\n    const [conversationData, setConversationData] = useState({ conversation_id: '', conversation_name: ''});\r\n\r\n    useEffect(() => {\r\n      if(conversationData.conversation_id !== '' || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== '') {\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n\r\n        dispatch(setConversationId({ conversation_id: conversationData.conversation_id, conversation_name: conversationData.conversation_name }));\r\n        dispatch(setConversationWith(conversation.name));\r\n\r\n      }\r\n\r\n    },[conversationData]);\r\n\r\n         let fuck =  conversation[conversation.length - 1] // get the latest generated ID\r\n         let fucking = `\"${JSON.stringify(fuck)}\"`;\r\n         let awts = fucking.split(',');\r\n\r\n         { awts.map((d) => {\r\n          // console.log('withQoute: ', d)\r\n           let removeQoute = d.replace(/['\"]+/g, '')\r\n          //  console.log('removeQoute: ', removeQoute)\r\n\r\n            if(removeQoute.includes('_id') === true) {\r\n           \r\n              let finalResult = removeQoute.split(\"_id:\").pop();\r\n              // console.log('create a logic that will handle this: ', conversation_data.conversation_with );\r\n             \r\n              // if conversation_data.conversation_with !== undefined\r\n              if(conversation_data.conversation_with !== undefined) {\r\n                // dispatch(getMessages(finalResult));\r\n         \r\n              }\r\n    \r\n            }\r\n        })}\r\n\r\n        /////\r\n      ///\r\n\r\n    const [updatingFlag, setUpdatingFlag] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        if(updatingFlag !== 0) {\r\n            socket.on('updateMessage', (data) => {\r\n\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n        \r\n            socket.on('updateConversation', (data) => {\r\n\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n\r\n        }\r\n        dispatch(getConversation(userId));\r\n\r\n\r\n        socket.on('updateMessage', (data) => {\r\n\r\n          setUpdatingFlag(data.updatingFlag);\r\n        });\r\n\r\n\r\n        if(conversationData.conversation_id !== '') {\r\n          dispatch(getMessages(conversationData.conversation_id));\r\n        }\r\n  \r\n    },[updatingFlag]);\r\n\r\n    const handleClick = data => {\r\n\r\n      //add event here auto click when conversation\r\n      if(conversationId !== 0 || conversationId.length !== 0 || conversationId !== undefined) {\r\n        setConversationData({...conversationData, ...data});\r\n\r\n      }\r\n    }\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        //add validation here so it will nto always click, just click when the inbox is belongs to him/her\r\n      if(inputRef.current !== null){\r\n        inputRef.current.click();\r\n      }\r\n       \r\n    }, [conversation])\r\n    \r\n    return(\r\n           !conversation?.length ? <CircularProgress /> : (       \r\n                  <Grid container className={classes.mainContainer} component={Paper} >\r\n                    <Typography className={classes.Label}> INBOX </Typography> \r\n                        {conversation.map((conversation) => (\r\n                          <Grid key={conversation._id} container item lg={12} md={12} sm={12}>\r\n                               <MessageIcon/> \r\n                               <Link ref={inputRef} key={conversation.conversation_id} component=\"button\" onClick={() => handleClick({conversation_id: conversation._id, conversation_name: conversation.name})}>                              \r\n                                <Typography className={classes.UserContent}>{conversation.name}</Typography>\r\n                              </Link>\r\n                          </Grid> \r\n\r\n                        ))}            \r\n                  </Grid>)\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect, useState } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport './Messages.css';\r\n// import io from 'socket.io-client';\r\n\r\nconst Messages = ({ message }) => {\r\n    // console.log('[Messages] Rendered: ');\r\n    const [justifyContentVal, setJustifyContentVal] = useState(\"\");\r\n    const [backgroundColor, setBackgroundColor] = useState({ color: ''});\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    let currentUser = user?.result?._id;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(message.owner === currentUser) {\r\n            setJustifyContentVal('flex-start');\r\n            setBackgroundColor({...backgroundColor, color: '#2534da'});\r\n        } else {\r\n            setJustifyContentVal('flex-end');\r\n            setBackgroundColor({...backgroundColor, color: '#61658f'});\r\n        }\r\n\r\n    },[message]);\r\n\r\n    return (\r\n        <Grid style={{ display: \"flex\", justifyContent: justifyContentVal }} item xs={12} sm={12} md={12}>    \r\n            <Typography className=\"messageBox\" style={{ background: backgroundColor.color, fontFamily: 'Segoe UI', margin: '1px 3px 1px 3px' }}>\r\n                    {message.content}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Messages;","import { Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport Messages from './Messages.js';\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\nimport io from 'socket.io-client';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n    scrollFeed: {\r\n      height: 300,\r\n      backgroundColor: '#e0e0e0'\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      fontFamily: 'Segoe UI',\r\n      display: 'flex',\r\n      padding: '11px 11px 11px 11px'\r\n    }\r\n\r\n  \r\n  });\r\n\r\n  let socket = io('localhost:5555');\r\n\r\nconst Message = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector((state) => state.messages);\r\n\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    useEffect(() => {\r\n        if(conversation_data.conversation_id !== undefined) {\r\n            dispatch(getMessages(conversation_data.conversation_id));\r\n        }\r\n\r\n    },[]);\r\n\r\n    const [typing, SetTyping] = useState();\r\n\r\n    useEffect(() => {\r\n            socket.on('typing-activated', data => {\r\n            SetTyping(data);\r\n            // console.log('[MESSAGE] socket.on.typing-activated-data: ', data);\r\n            })\r\n    },[typing])\r\n\r\n    const [emitMessageRespond, setEmitMessageRespond] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        //the syntax below is one-time-run only, when user dont have conversation/message yet (he's newly registerred user) -->\r\n        if(conversation_data.conversation_id === undefined) {\r\n          dispatch(getConversation(userId));\r\n      \r\n        }\r\n        // ------|\r\n\r\n        //the syntax below is already has the conversation and just appending messages -->\r\n        if(conversation_data.conversation_id !== undefined) {\r\n          dispatch(getMessages(conversation_data.conversation_id));\r\n\r\n\r\n          }\r\n        // ------|\r\n\r\n      socket.on('updateMessage', data => {\r\n        console.log('[Message]: socket-on-updateMessage ', data);\r\n        // console.log('[Message] Rendered: pleasepleasepleaseplease ', data, '\\n','messages: ', messages);\r\n        setEmitMessageRespond(data);\r\n    });\r\n\r\n    }, [emitMessageRespond])\r\n\r\n    //30-05-->\r\n    const [conversationData, setConversationData] = useState({ conversation_id: '', conversation_name: ''});\r\n\r\n    useEffect(() => {\r\n\r\n      // console.log('new useEffect: ', conversationData.conversation_id)\r\n\r\n      if(conversationData.conversation_id !== '' || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== '') {\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n\r\n        // dispatch(setConversationId({ conversation_id: conversationData.conversation_id, conversation_name: conversationData.conversation_name }));\r\n        // dispatch(setConversationWith(conversation.name));\r\n\r\n      }\r\n\r\n    },[conversationData]);\r\n\r\n    //30-05--|\r\n\r\n\r\n    return(\r\n        <>\r\n          <Typography className={classes.Label}> \r\n            CONVERSATION WITH : &nbsp;&nbsp; \r\n    \r\n            {!conversation_data?.conversation_with?.name?.length \r\n                ? conversation_data.conversation_name \r\n                : conversation_data?.conversation_with?.name\r\n            }\r\n            </Typography>\r\n    \r\n              <ReactScrollableFeed className={classes.scrollFeed}>\r\n                    {messages.map((message) => (\r\n                        <Grid key={message._id} container item xs={12} sm={12} md={12}>\r\n                            <Messages message={message}/>\r\n                        </Grid>\r\n                    ))}          \r\n              </ReactScrollableFeed>\r\n      \r\n          {/* {!messages?.length ? <CircularProgress /> : (\r\n              <ReactScrollableFeed className={classes.scrollFeed}>\r\n                    {messages.map((message) => (\r\n                        <Grid key={message._id} container item xs={12} sm={12} md={12}>\r\n                            <Messages message={message}/>\r\n                        </Grid>\r\n                    ))}          \r\n                </ReactScrollableFeed>\r\n          )} */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Grid, Paper, Typography, Link, Button } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { getUsers } from '../../actions/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConversationWith, resetConversationData } from '../../actions/chat/conversation'\r\nimport {  resetMessages } from '../../actions/chat/message'\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      overflowY: 'auto',\r\n      backgroundColor: '#FFFFFF',\r\n      padding: '11px 11px 11px 11px'\r\n    },\r\n    userLink: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '3px 3px 3px 3px',\r\n        height: '33px'\r\n    },\r\n    Label: {\r\n        display: 'flex',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Segoe UI',\r\n        paddingBottom: '9px'\r\n    },\r\n    UserContent: {\r\n        display: 'flex',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Segoe UI',\r\n        paddingLeft: '9px'\r\n    },\r\n\r\n  });\r\n\r\nlet ctr = 0;\r\n\r\nconst cleanup = () => {\r\n    ctr = 0;\r\n}\r\n\r\nconst UserList = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userlist = useSelector((state) => state.users);\r\n    const conversation_data = useSelector(state => state.conversation_data);\r\n\r\n    console.log('userlist ', userlist);\r\n    // let removeIndex = userlist.map(function(item) { return item.firstname; }).indexOf('waldo');\r\n    // userlist.splice(removeIndex, 1);\r\n    // console.log('[AFTER]userlist ', userlist);\r\n  \r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n        console.log('userlist/useEffect ', userlist);\r\n\r\n        return cleanup()\r\n\r\n    },[]);\r\n\r\n    const [participants, setParticipants] = useState({ name: '', id: ''});\r\n    \r\n     useEffect(() => {\r\n         if(participants.length !== 0 || participants !== undefined) {\r\n            //REDUX: Reset the conversation_data when clicking on userlist\r\n            //this reset must go 1st.\r\n            //TODO/TOASK: refactor => w/c is more optimized. reset the whole objects or modify/set the specific props/field *Performance\r\n            dispatch(resetConversationData());\r\n            dispatch(setConversationWith(participants));\r\n            dispatch(resetMessages());\r\n           //todo: check if the participants has conversation if null reset the message component into new OR =>\r\n           //optimize userList => show only the user that has no conversation at all to current user logged in\r\n         }\r\n\r\n     },[participants])\r\n\r\n     ctr = ctr + 1;\r\n     console.log('userlist ctr: ', ctr)\r\n\r\n    return (        \r\n        !userlist?.length ? <CircularProgress /> : (                        \r\n                    <Grid container className={classes.mainContainer} component={Paper} >\r\n                        <Typography className={classes.Label}>USER LIST</Typography> \r\n                        {userlist.map((user) => (\r\n                            <Link key={user._id} className={classes.userLink} component={Paper} elevation={9} onClick={() => setParticipants({name: user.firstname, id: user._id})}>\r\n                              <Button className={classes.UserContent}> { user.firstname }  </Button>  \r\n                                <Button style={{ color: 'black' }} size=\"small\">\r\n                                    <MoreHorizIcon fontSize=\"default\" />\r\n                                </Button>       \r\n                          \r\n                            </Link>       \r\n                        ))}            \r\n                    </Grid>              \r\n            )\r\n    );\r\n \r\n}\r\n\r\nexport default UserList","import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField, Box, Paper } from '@material-ui/core';\r\nimport { createMessage } from '../../actions/chat/message';\r\nimport { createConversationAndMessage } from '../../actions/chat/conversation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket = io('localhost:5555');\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    Box: {\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      margin: '3px 3px 3px 3px',\r\n    },\r\n    \r\n    messageTextfield : {\r\n      display: 'flex',\r\n      margin: '22px 11px 11px 11px'\r\n  },\r\n    sendButton : {\r\n      display: 'flex',\r\n      margin: '3px 3px 3px 3px',\r\n      fontFamily: 'Segoe UI',\r\n\r\n    },\r\n\r\n\r\n  });\r\n\r\nconst Input = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n    const [messsageData, setMessageData] = useState({ owner: '', conversationId : '', content: ''});\r\n    const [keyPressCount, setKeyPressCount] = useState(0);\r\n    \r\n    //TODO: change this code into const var, useState no need\r\n     const [conAndMsgData] = useState({\r\n      conversation:{\r\n        participants: [], name: '', lastMessageId: 333\r\n      },\r\n      messages: {\r\n        owner: '', conversationId : '', content: ''\r\n      }\r\n     })\r\n    //  console.log('[Input] Rendered: ',conversation_data);\r\n     const [myMessage, setMyMessage] = useState('');\r\n     const conversationId = conversation_data?.conversation_id; \r\n\r\n     const clear = () => {\r\n      setMyMessage('');\r\n     }\r\n  \r\n    const handleMessage = async message => {\r\n        if(conversation_data.conversation_with === undefined) {\r\n          setMessageData({ ...messsageData, content: message })     \r\n          setMyMessage(prev => message);\r\n          // console.log('myMessagemyMessagemyMessage ', myMessage);\r\n        } else {\r\n          setMyMessage(message);\r\n      \r\n        }\r\n      };\r\n\r\n      const handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        clear();\r\n\r\n       //db entry: message only \r\n       if(conversation_data?.conversation_with === undefined) {\r\n\r\n          dispatch(createMessage({...messsageData, owner: userId, conversationId: conversation_data?.conversation_id}));\r\n       \r\n           socket.emit('sendMessage', { type: 'message' }, () => {\r\n                  // console.log('[CHAT]: socket.io. emit/sendMessage');\r\n            });\r\n\r\n\r\n       //db entry: conversation and message are created <his/her first message sent>   \r\n       } else if (conversation_data?.conversation_with !== undefined) {\r\n\r\n         dispatch(createConversationAndMessage(\r\n           {...conAndMsgData,  \r\n\r\n              conversation: {\r\n                participants: [userId, conversation_data?.conversation_with?.id], \r\n                name: `${conversation_data?.conversation_with?.name}`\r\n              },\r\n              messages: {\r\n                  owner: userId,\r\n                  content: myMessage\r\n              } \r\n           }\r\n          \r\n          ));\r\n\r\n            // create logic: add send_message_type: there are 2 types:\r\n            // 1: update conversation and message \r\n            // 2: message only\r\n           socket.emit('sendMessage', {type: 'conversation-message'});\r\n\r\n       } else {\r\n         console.log('[CHAT]: do nothing...')\r\n       }\r\n\r\n  };\r\n\r\n\r\n    const handleKeyPress = () => {\r\n\r\n      //when user is typing store the number of keypress in let as counter and use that let on logics ahead\r\n      //avoid the enter key here\r\n       setKeyPressCount(prev => prev + 1);\r\n\r\n      // console.log('[INPUT] handleKeyPress: ', keyPressCount);\r\n\r\n      socket.emit('typing', { userId: userId, conversationId: conversationId });\r\n\r\n      socket.on('typing-activated', data => {\r\n        // console.log('server response: ', data);\r\n      })\r\n    }\r\n\r\n    return (\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n              <Box className={classes.Box} component={Paper}>\r\n              <TextField \r\n                    className={classes.messageTextfield} \r\n                    name=\"message\"\r\n                    variant=\"outlined\" \r\n                    label=\"Send Message...\"\r\n                    fullWidth multiline rows={2} \r\n                    onChange={(e) => handleMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    value={myMessage}\r\n                />\r\n                <Button type=\"submit\" className={classes.sendButton} color=\"primary\" variant=\"contained\"> Send </Button>\r\n              </Box>\r\n\r\n            </form>\r\n    )\r\n};\r\n\r\nexport default Input;","import { Grid, Grow, Container, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Conversation from './Conversation';\r\nimport Message from './Message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport UserList from './../User/UserList';\r\nimport Input from './Input';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  messageBody: {\r\n    padding: 10,\r\n  },\r\n  controller: {\r\n    padding: 10,\r\n  },\r\n \r\n  messageTextfield : {\r\n    margin: '22px 11px 11px 11px'\r\n  },\r\n  messagePaper : {\r\n    paddingTop: 30\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  padding: {\r\n    padding: '9px 9px 9px 9px'\r\n  }\r\n\r\n});\r\n\r\nlet ctr = 0;\r\n\r\nconst cleanup = () => {\r\n    ctr = 0;\r\n}\r\n\r\nconst Chat = () => {\r\n\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const dispatch = useDispatch();\r\n \r\n    useEffect(() => {\r\n        dispatch(getConversation(userId));\r\n\r\n        return cleanup()\r\n    },[]);\r\n\r\n    ctr = ctr + 1;\r\n    console.log('chat ctr: ', ctr)\r\n\r\n  return (\r\n    <Grow in>\r\n    <Container>\r\n        <Grid className={classes.container} container>\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.padding} elevation={12} >\r\n                <UserList/>\r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4}  className={classes.padding} elevation={12} >\r\n                <Conversation /> \r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.controller} component={Paper} elevation={12} >\r\n \r\n                {/* {conversation !== null ? <Message /> : null} */}\r\n                <Message /> \r\n                <Input />\r\n            </Grid>\r\n          </Grid>\r\n      </Container>\r\n      </Grow>\r\n  );\r\n}\r\n\r\nexport default Chat;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexWrap: 'wrap',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: '20px',\r\n    margin: '10px',\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: '20px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: 'flex', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px', \r\n    borderRadius: '15px',\r\n    height: '39vh',\r\n  },\r\n  commentsOuterContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  commentsInnerContainer: {\r\n    height: '200px',\r\n    overflowY: 'auto',\r\n    marginRight: '30px'\r\n  }\r\n}));","import React, { useState, useRef } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { commentPost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\n//functional react components\r\nconst CommentSection = ( { post}  ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const commentsRef = useRef();\r\n    const classes = useStyles();\r\n    const [comments, setComments] = useState(post?.comments);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const handleClick = async () => {\r\n         const finalComment = `${user.result.firstname} : ${comment}` \r\n         const newComments = await dispatch(commentPost(finalComment, post._id));\r\n         setComments(newComments);\r\n         setComment('');\r\n\r\n         commentsRef.current.scrollIntoView({ behavior: 'smooth'});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.commentsOuterContainer}>\r\n                <div className={classes.commentsInnerContainer}>\r\n                    <Typography gutterBottom variant=\"h6\">Comments</Typography>\r\n                    {comments.map((c, i) => (\r\n                        <Typography key={i} gutterBottom variant=\"subtitle1\"> \r\n                          <strong>{c.split(': ')[0]}</strong>\r\n                          {c.split(':')[1]}\r\n                        </Typography>\r\n                    ))}\r\n                    <div ref={commentsRef}/>\r\n                </div>\r\n\r\n                {user?.result?.firstname && (  \r\n                <div style={{ width: '70%'}}>\r\n                    <Typography gutterBottom variant=\"h6\">Write a Comment</Typography>\r\n                    <TextField \r\n                        fullWidth\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        label=\"Comment\"\r\n                        multiline\r\n                        value={comment}\r\n                       \r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                    <Button style={{ marginTop: '10px'}} fullWidth disabled={!comment}  color=\"primary\" variant=\"contained\" onClick={handleClick}>\r\n                        Comment\r\n                    </Button>\r\n                </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\n\r\nimport CommentSection from './CommentSection';\r\n\r\nconst PostDetails = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPost(id))\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        if(post) {\r\n            // search is none because we are not looking for search, we are only looking for tags, thats what were going to use to recommend the post\r\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n        }\r\n    }, [post])\r\n\r\n    //check the post and isLoading, before rendering on bottom return\r\n    if(!post) return null;\r\n\r\n    if(isLoading) {\r\n        return <Paper elevation={6} className={classes.loadingPaper}>\r\n                    <CircularProgress size=\"7em\" />\r\n                </Paper>\r\n    }\r\n\r\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n    const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n    return (\r\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n            <div className={classes.card}>\r\n                <div className={classes.section}>\r\n                <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n                <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n                <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n                <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n                <Divider style={{ margin: '20px 0' }} />\r\n                <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n                <Divider style={{ margin: '20px 0' }} />\r\n\r\n                <CommentSection post={post}/>\r\n\r\n\r\n                <Divider style={{ margin: '20px 0' }} />\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n                </div>\r\n            </div>\r\n            {recommendedPosts.length && (\r\n                <div className={classes.section}>\r\n                    <Typography gutterBottom variant=\"h5\">You might also like</Typography>\r\n                    <Divider />\r\n                    <div className={classes.recommendedPosts}>\r\n                    {recommendedPosts.map(({ title, message, name, likes, selectedFile, _id}) => (\r\n                        <div style={{ margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\r\n                            <Typography gutterBottom variant=\"h6\">{title}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                            <img src={selectedFile} width=\"200px\" />\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PostDetails;","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport NavigationBar from './components/Navbar/NavigationBar';\nimport Auth from './components/Auth/Auth';\nimport Profile from './components/User/Profile';\nimport Chat from './components/Chat/Chat';\nimport PostDetails from './components/PostDetails/PostDetails';\n\nconst App = () => {\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n   console.log('[App] user: ', user);\n\n  return (\n        <BrowserRouter>\n        <NavigationBar />\n        <Container maxWidth=\"xl\" style={{ marginTop: '99px'}}> \n          <Switch>\n            <Route path=\"/\" exact component={() => <Redirect to=\"/posts\" />} />\n            <Route path=\"/posts\" exact component={Home}/>\n            <Route path=\"/posts/search\" exact component={Home}/>\n            <Route path=\"/posts/:id\"  component={PostDetails}/>\n            <Route path=\"/chat\" exact component={Chat} />\n            {/* <Route path=\"/auth\" exact component={() => (user === null ? <Auth /> : <Redirect to=\"/posts\" />)} /> */}\n            <Route path=\"/auth\" exact component={() => (user === null ? <Auth /> : <Redirect to=\"/\" />)} />\n         \n            <Route path=\"/user/profile\" exact component={Profile}/>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n  );\n}\n\n\n\nexport default App;\n","import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth.js';\nimport conversationsReducer from './chat/conversations.js';\nimport messagesReducer from './chat/messages.js';\nimport postsReducer from './posts.js';\nimport usersReducer from './users.js';\n\nimport conversationIdReducer from './chat/conversations-conversation-id.js';\n\nexport default combineReducers({ \n    auth: authReducer,\n    conversations: conversationsReducer,\n    conversation_data: conversationIdReducer,\n    messages: messagesReducer,\n    posts: postsReducer,\n    users: usersReducer\n\n});\n","import { FETCH_CONVERSATION, LOGOUT } from '../../constants/actionTypes';\r\n\r\nexport default (conversations = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_CONVERSATION: \r\n         return action.payload;\r\n      case LOGOUT:\r\n        return conversations = [];\r\n\r\n      default:\r\n        return conversations;\r\n    }\r\n  };\r\n  ","import {  SET_CONVERSATION_ID, LOGOUT, SET_CONVERSATION_WITH, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\n\r\nexport default (conversation_data = [], action) => {\r\n    switch (action.type) {\r\n        case SET_CONVERSATION_ID:\r\n            return action.payload\r\n        case SET_CONVERSATION_WITH:\r\n            // console.log('SET_CONVERSATION_WITH::::::: ', conversation_data, '   ', action)\r\n            return {...conversation_data, conversation_with: action.payload}\r\n        case RESET_CONVERSATION_DATA:\r\n            // console.log('RESET_CONVERSATION_DATA::::::: ', conversation_data, '   ', action)\r\n            return conversation_data = []\r\n        case LOGOUT:\r\n            return conversation_data = []\r\n      default:\r\n        return conversation_data;\r\n    }\r\n  };\r\n  ","import { FETCH_MESSAGES, LOGOUT, RESET_MESSAGES } from '../../constants/actionTypes';\r\n\r\nexport default (messages = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_MESSAGES:\r\n        return action.payload;\r\n      case RESET_MESSAGES:\r\n        return messages = [];\r\n      case LOGOUT:\r\n        return messages;\r\n      default:\r\n        return messages;\r\n    }\r\n  };","import _ from 'lodash';\nimport { FETCH_POSTS, FETCH, CREATE, UPDATE, DELETE, LIKE , LOGOUT, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: []}, action) => {\n  //console.log('client/src/reducers/chat/posts/action.payload: ', action.payload,'\\n','client/src/reducers/chat/posts/posts: ', posts);\n  switch (action.type) {\n\n    case START_LOADING: \n      return {...state, isLoading: true }\n\n    case END_LOADING: \n      return {...state, isLoading: false }\n    case FETCH:\n      return { ...state, post: action.payload};\n\n    case FETCH_POSTS:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      }\n\n    case FETCH_BY_SEARCH:\n        return { ...state, posts: action.payload};\n\n    case LIKE:\n      return { ... state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n            // change the post that just received a comment...\n            if(post._id === action.payload._id) return action.payload\n            \n            return post;\n        })\n      };\n\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload]};\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)};\n\n    case LOGOUT:\n        return state;\n\n    default:\n      return state;\n  }\n};\n\n","import { UPDATE, FETCH_USERS } from '../constants/actionTypes';\r\n\r\nexport default (users = [], action) => {\r\n   // console.log('client/src/reducers/chat/users action.payload: ', action.payload,'\\n','client/src/reducers/chat/users/users: ', users);\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return action.payload;        \r\n        case UPDATE: \r\n            return users.map((user) => (user._id === action.payload._id ? action.payload: user));\r\n\r\n        default:\r\n            return users; \r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducers from './reducers/index';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'),\n); \n"],"sourceRoot":""}