{"version":3,"sources":["constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Home/Home.js","components/Navbar/styles.js","history.js","components/Chat/Conversation.js","actions/chat/message.js","actions/chat/conversation.js","components/Chat/Chat.js","components/Chat/Messages.js","components/Chat/Message.js","actions/users.js","components/User/UserList.js","components/Navbar/Navbar.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","components/User/styles.js","components/User/Input.js","components/User/Profile.js","App.js","reducers/auth.js","reducers/index.js","reducers/chat/conversations.js","reducers/chat/conversations-conversation-id.js","reducers/chat/messages.js","reducers/posts.js","reducers/users.js","index.js"],"names":["LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","likePost","id","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","post","signUp","updateUser","updatedUser","fetchConversation","userId","get","fetchMessages","conversationId","createPost","dispatch","a","newPost","data","type","payload","console","log","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","useDispatch","classes","useStyles","user","useState","Likes","likes","length","find","like","result","googleId","_id","fontSize","Card","className","CardMedia","image","selectedFile","Typography","variant","owner","moment","createdAt","fromNow","creator","Button","onClick","style","size","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","disabled","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","Grid","container","key","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","useEffect","clear","handleSubmit","e","preventDefault","firstname","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","align","Home","Grow","in","Container","justify","appBar","heading","textDecoration","marginLeft","toolbar","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","createBrowserHistory","socket","getMessages","createMessage","newMessage","getConversation","createConversationAndMessage","conversationAndMessage","newConversationAndMessage","setConversationWith","io","table","minWidth","chatSection","headBG","borderLeft500","borderLeft","borderRight500","borderRight","messageArea","overflowY","gridList","Conversation","conversation","conversations","conversation_id","conversation_name","conversationData","setConversationData","undefined","updatingFlag","setUpdatingFlag","on","lg","Link","currentUser","Messages","justifyContentVal","setJustifyContentVal","background","setBackground","content","messagesContainer","messsages","scrollFeed","Message","messages","conversation_data","receiveMessage","setReceiveMessage","conversation_with","UserList","userlist","users","participants","setParticipants","error","sendButton","messageBody","paddingBottom","userList","messageTextfield","messagePaper","Chat","messsageData","setMessageData","lastMessageId","conAndMsgData","myMessage","setMyMessage","emit","Navbar","setUser","location","useLocation","history","useHistory","logout","actionType","push","decode","exp","Date","getTime","AppBar","to","Toolbar","Avatar","alt","src","imageUrl","charAt","marginTop","avatar","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","maxWidth","elevation","router","signin","prevIsSignup","float","defaultValue","lastname","Profile","currentUserId","App","path","exact","Auth","authReducer","authData","action","setItem","stringify","loading","errors","combineReducers","auth","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d4cd840.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH = 'FETCH';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\n//USERS\nexport const FETCH_USERS = 'FETCH_USERS';\n\n//POSTS\nexport const FETCH_POST = 'FETCH_POST';\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\n//CONVERSATION\nexport const FETCH_CONVERSATION = 'FETCH_CONVERSATION';\nexport const FETCH_CONVERSATIONS = 'FETCH_CONVERSATIONS';\nexport const SET_CONVERSATION_ID = 'SET_CONVERSATION';\nexport const GET_CONVERSATION_ID = 'GET_CONVERSATION';\nexport const SET_CONVERSATION_WITH = 'SET_CONVERSATION_WITH';\nexport const CREATE_CONVERSATION = 'CREATE_CONVERSATION';\nexport const CREATE_CONVERSATION_AND_MESSAGE = 'CREATE_CONVERSATION_AND_MESSAGE';\n//MESSAGE\nexport const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\n\n","import axios from 'axios';\n \n//cloud\n //const API = axios.create({ baseURL: 'https://kamonrarara.herokuapp.com' });\n\n//local\nconst API = axios.create({ baseURL: 'http://localhost:5555' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = () => API.get('/posts');\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/users/signin', formData);\nexport const signUp = (formData) => API.post('/users/signup', formData);\n\nexport const fetchUsers = () => API.get('/users');\nexport const updateUser = (id, updatedUser) => API.patch(`/users/profile/${id}`, updatedUser);\n\nexport const fetchConversation = (userId) => API.get(`/chat/conversations/${userId}`);\n\nexport const createConversation = (newConversation) => API.post('/chat/conversations', newConversation);\nexport const createConversationAndMessage = (newConversationAndMessage) => API.post('/chat/conversations', newConversationAndMessage);\n\nexport const fetchMessages = (conversationId) => API.get(`/chat/messages/${conversationId}`);\nexport const createMessage = (newMessage) => API.post('/chat/messages', newMessage);\n\n\n","import { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE, FETCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n   // console.log('client>src>action>posts>getPost with param id:  ', id);\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH, payload: data});\n  }\n  catch (error) {\n    console.log('client>src>action>posts>getPost ERROR: ', error);\n  }\n};\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n    \n    dispatch({ type: FETCH_POSTS, payload: data });\n  } catch (error) {\n    console.log('client>src>action>posts>getPosts: ', error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    //console.log('action/action/createPost payload data: ', data);\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n\n    const { data } = await api.updatePost(id, post);\n    \n    //console.log('action/action/updatePost payload data: ', data);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { likePost, deletePost, getPost } from '../../../actions/posts';\nimport useStyles from './styles';\nimport io from 'socket.io-client';\n\nlet socket;\nconst ENDPOINT = 'localhost:5555';\n\nconst Post = ({ post, setCurrentId }) => {\n\n  // message debugger...\n  console.log('[POST] ', post);\n\n  //THIS SELECTOR WILL FIND THE UPDATED POST AND RE-RENDER THE UPDATED DATA..\n  //const updatedPost = useSelector((state) => (state.posts.find((post) => post._id === post._id)));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  //socket = io(ENDPOINT);\n  const [like, setLike] = useState(false);\n\n  // useEffect(() => {\n  //     console.log(\n  //       '-[POST] 1ST useEffect ','\\n',\n  //       'likes: ', post.likes.length,'\\n',\n  //       'title', post.title\n  //       );\n\n  // },[post]);\n\n\n  // useEffect(() => {\n\n  //   console.log(\n  //     '-[POST] 2ND useEffect ','\\n',\n  //     'likes: ', post.likes.length,'\\n',\n  //     'title:', post.title\n  //     );\n\n  //     socket.on('updateLike', () => {\n  //     console.log('-[POST] ',\n  //     '2ND  useEffect when like is clicked => received => dataFrom => server => io.emit.');\n  //     setLike(true);\n   \n  //   });\n  // }, []); \n\n  const handleLikesEvent = () => {\n         //console.log('handleLikesEvent/likes: ', post.likes.length);\n         dispatch(likePost(post._id));\n  }\n\n  const Likes = () => { \n      //console.log('-[POST] THIS LINE IS BELOW Likes()');\n      if (post?.likes?.length > 0) {\n        return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n          ? (\n            <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n          ) : (\n            <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n          );\n      }    \n\n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;    \n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.owner}</Typography>\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n      </div>\n      {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n      <div className={classes.overlay2}>\n        <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n      )}\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post?.tags?.map((tag) => `#${tag} `)}</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        {/* <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}> */}\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLikesEvent}>\n\n          <Likes /> \n        </Button>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n\n  const classes = useStyles();\n  const posts = useSelector((state) => state.posts);\n\n  console.log('[POSTS] useSelector posts: ', posts);\n\n\n  // useEffect(() => {\n  //   console.log('-[POSTS] useEffect posts: ', posts);\n  //   console.log('-[POSTS] useEffect conversations: ', temp);\n  // },[posts])\n\n\n  return (\n    !posts.length ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12} sm={6} md={6}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n\n\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n  const [postData, setPostData] = useState({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null)) ;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  console.log('[FORM]');\n  console.log('-[FORM]/post/useSelector-redux: ', post);  \n  console.log('-[FORM]/postData/useState: ', postData);\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, owner: user?.result?.firstname }));\n      clear();\n    } else {\n      \n      dispatch(updatePost(currentId, { ...postData, owner: user?.result?.firstname}));\n      clear();\n    }\n  };\n\n  if (!user?.result?._id) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getPosts } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\n//import Chat from '../Chat/Chat';\n\nconst Home = () => {\n  \n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n\n  console.log('[HOME]: I will return the [POSTS] and [FORM] as jsx');\n  console.log('-[HOME]: useState | setCurrentId: ', currentId);\n\n  const posts = useSelector((state) => state.posts);\n\n  useEffect(() => {\n    dispatch(getPosts());\n\n    console.log('[HOME]: useEffect | getPosts/fetchAPI | setCurrentId: ', currentId);\n  }, [currentId, dispatch]);\n\n\n\n  return (\n    <Grow in>\n      <Container>\n        <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={0}>\n          <Grid item xs={12} sm={7}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n\n};\n\nexport default Home;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n    fontSize: '16px'\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n","import { createBrowserHistory } from 'history';\r\nconsole.log('HISTORY JS');\r\nexport default createBrowserHistory();","import { Button, CircularProgress, Link, Grid, Grow, Paper, Typography } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport { setConversationId, setConversationWith } from '../../actions/chat/conversation';\r\nimport io from 'socket.io-client';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nlet socket;\r\nconst ENDPOINT = 'localhost:5555';\r\nsocket = io(ENDPOINT)\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: '100%',\r\n      height: '70vh'\r\n    },\r\n    headBG: {\r\n        backgroundColor: '#e0e0e0'\r\n    },\r\n    borderLeft500: {\r\n      borderLeft: '1px solid #e0e0e0'\r\n    },\r\n    borderRight500: {\r\n        borderRight: '1px solid #e0e0e0'\r\n    },\r\n    messageArea: {\r\n      height: '70vh',\r\n      overflowY: 'auto'\r\n    },\r\n    gridList: {\r\n      width: 300,\r\n      height: 450,\r\n    },\r\n    mainContainer: {\r\n     // height: '53vh',\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d'\r\n    },\r\n    purple: {\r\n      // color: deepPurple[500],\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n  \r\n  });\r\n\r\nconst Conversation = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const conversation = useSelector((state) => state.conversations);\r\n \r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    console.log('[CONVERSATION] conversation:', conversation);\r\n    const [conversationData, setConversationData] = useState({ conversation_id: '', conversation_name: ''});\r\n\r\n    useEffect(() => {\r\n      if(conversationData.conversation_id !== 0 || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== undefined) {\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n        dispatch(setConversationId({ conversation_id: conversationData.conversation_id, conversation_name: conversationData.conversation_name }));\r\n        dispatch(setConversationWith(conversation.name));\r\n      }\r\n\r\n    },[conversationData]);\r\n\r\n    //This useEffect will run only once for initial process of conversation-message db insertion.\r\n   \r\n    const [updatingFlag, setUpdatingFlag] = useState(0);\r\n\r\n    socket.on('updateConversation', (data) => {\r\n      console.log('[kamon-CONVERSATION] socket.on.updateMessage data:', data);\r\n      setUpdatingFlag(data.updatingFlag);\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversation(userId));\r\n    },[updatingFlag]);\r\n\r\n    return(\r\n           !conversation?.length ? <CircularProgress /> : (       \r\n                  <Grid container className={classes.mainContainer} component={Paper} >\r\n                    <Typography> INBOX </Typography> \r\n                        {conversation.map((conversation) => (\r\n                          <Grid container item lg={12} md={12} sm={12}>\r\n                                     \r\n                               <MessageIcon/> \r\n                               <Link component=\"button\" onClick={() =>setConversationData({conversation_id: conversation._id, conversation_name: conversation.name})}>\r\n                               <Typography > {conversation.name}</Typography>\r\n                              </Link>\r\n                          </Grid> \r\n\r\n                        ))}            \r\n                  </Grid>)\r\n    );\r\n};\r\n\r\nexport default Conversation;","import { FETCH_MESSAGES, CREATE_MESSAGE, RESET_MESSAGES } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\nimport history from '../../history';\r\n\r\nexport const getMessages = (conversationId) => async (dispatch) => {\r\n    \r\n    try {\r\n        const { data } = await api.fetchMessages(conversationId);\r\n         \r\n        dispatch({ type: FETCH_MESSAGES, payload: data});\r\n       // history.push('/chat');\r\n\r\n    } catch (error) {\r\n        console.log('ERROR: ', error.name);\r\n    }\r\n};\r\n\r\nexport const createMessage = (message) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createMessage(message);\r\n        dispatch({ type: CREATE_MESSAGE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('action-createMessage error: ',error);\r\n    }\r\n};\r\n\r\nexport const resetMessages = (message) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_MESSAGES});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n","import { FETCH_CONVERSATION, SET_CONVERSATION_ID, SET_CONVERSATION_WITH, CREATE_CONVERSATION, CREATE_CONVERSATION_AND_MESSAGE } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n\r\nexport const getConversation = (userId) => async (dispatch) => {\r\n    \r\n    try {\r\n        const { data } = await api.fetchConversation(userId);\r\n  \r\n        dispatch({ type: FETCH_CONVERSATION, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-GET-CONVERSATION]', error.name);\r\n    }\r\n};\r\n\r\nexport const createConversation = (conversation) => async (dispatch) => {\r\n\r\n    try {\r\n        const { data } = await api.createConversation(conversation);\r\n        dispatch({ type: CREATE_CONVERSATION, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION]', error.name);\r\n    }\r\n\r\n}\r\nexport const createConversationAndMessage = (conversationAndMessage) => async (dispatch) => {\r\n        console.log('conversationAndMessageeee: ', conversationAndMessage);\r\n    try {\r\n        const { data } = await api.createConversationAndMessage(conversationAndMessage);\r\n        dispatch({ type: CREATE_CONVERSATION_AND_MESSAGE, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION-AND-MESSAGE]', error.name);\r\n    }\r\n\r\n}\r\n\r\nexport const setConversationId = (payload) =>  {\r\n    return {\r\n        type: SET_CONVERSATION_ID,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setConversationWith = (payload) => {\r\n    return {\r\n        type: SET_CONVERSATION_WITH,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n","import { Grid, Grow, Container, Paper, Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Conversation from './Conversation';\r\nimport Message from './Message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport { createMessage } from '../../actions/chat/message';\r\nimport { createConversationAndMessage } from '../../actions/chat/conversation';\r\nimport io from 'socket.io-client';\r\nimport UserList from './../User/UserList';\r\n\r\nlet socket;\r\nconst ENDPOINT = 'localhost:5555';\r\nsocket = io(ENDPOINT);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: '70vh'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderLeft500: {\r\n    borderLeft: '1px solid #e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  },\r\n  gridList: {\r\n    width: 300,\r\n    height: 450,\r\n  },\r\n\r\n  sendButton : {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  messageBody: {\r\n    padding: 10,\r\n    height: 666,\r\n    paddingBottom: 90\r\n  \r\n  },\r\n  userList: {\r\n    padding: 10,\r\n    height: 666,\r\n    alignItems: 'right'\r\n  },\r\n  messageTextfield : {\r\n\r\n    paddingBottom: 10\r\n  },\r\n  messagePaper : {\r\n    paddingTop: 30\r\n  }\r\n\r\n});\r\n    \r\n\r\nconst Chat = () => {\r\n\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //socket = io(ENDPOINT);\r\n\r\n    const conversation = useSelector((state) => state.conversations);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    const [messsageData, setMessageData] = useState({ owner: '', conversationId : '', content: ''});\r\n\r\n      //TODO: change this code into const var, useState no need\r\n     const [conAndMsgData, setConAndMsgData] = useState({\r\n      conversation:{\r\n        participants: [], name: '', lastMessageId: 333\r\n      },\r\n      messages: {\r\n        owner: '', conversationId : '', content: ''\r\n      }\r\n     })\r\n\r\n     const [myMessage, setMyMessage] = useState('');\r\n\r\n    console.log('[CHAT] conversation/participants: ', conversation);\r\n    useEffect(() => {\r\n        dispatch(getConversation(userId));\r\n    },[]);\r\n\r\n    const handleSubmit = async (e) => {\r\n          e.preventDefault();\r\n\r\n         if(conversation_data?.conversation_with === undefined) {\r\n\r\n            dispatch(createMessage({...messsageData, owner: userId, conversationId: conversation_data?.conversation_id}));\r\n\r\n            await socket.emit('sendMessage', { type: 'message' }, () => {\r\n                    console.log('[CHAT]: socket.io. emit/sendMessage');\r\n              });\r\n\r\n         } else if (conversation_data?.conversation_with !== undefined) {\r\n\r\n           dispatch(createConversationAndMessage(\r\n             {...conAndMsgData,  \r\n\r\n                conversation: {\r\n                  participants: [userId, conversation_data?.conversation_with?.id], \r\n                  name: `${conversation_data?.conversation_with?.name}`\r\n                },\r\n                messages: {\r\n                    owner: userId,\r\n                    content: myMessage\r\n                } \r\n             }\r\n            \r\n            ));\r\n\r\n              // create logic: add send_message_type: there are 2 types:\r\n              // 1: update conversation and message \r\n              // 2: message only\r\n            await socket.emit('sendMessage', {type: 'conversation-message'});\r\n\r\n         } else {\r\n           console.log('[CHAT]: do nothing...')\r\n         }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleMessage = (message) => {\r\n      if(conversation_data.conversation_with === undefined) {\r\n    \r\n        setMessageData({ ...messsageData, content: message })\r\n        console.log('messsageData: ', messsageData);\r\n\r\n      } else {\r\n        setMyMessage(message);\r\n      }\r\n\r\n    }\r\n\r\n  return (\r\n    <Grow in>\r\n    <Container>\r\n        <Grid container justify=\"space-between\" alignItems=\"stretch\" >\r\n           <Grid item xs={3} sm={3} md={3} lg={3}  component={Paper} className={classes.messageBody} >\r\n                <UserList/>\r\n           </Grid>\r\n           <Grid item xs={3} sm={3} md={3} lg={3}  component={Paper} className={classes.userList} >\r\n                <Conversation /> \r\n           </Grid>\r\n           <Grid item xs={6} sm={6} md={6} lg={6} component={Paper} className={classes.messageBody}>\r\n             {conversation !== null ? <Message /> : null}\r\n           \r\n               {/* TODO:: refactor => seperate this code and set as a component => Input.js component*/}\r\n                 <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                   <TextField \r\n                       className={classes.messageTextfield} \r\n                       name=\"message\"\r\n                       variant=\"outlined\" \r\n                       label=\"Message\"\r\n                       fullWidth multiline rows={2} \r\n                       onChange={(e) => handleMessage(e.target.value)} \r\n                      //  onChange={(e) => setMessageData({ ...messsageData, content: e.target.value })} \r\n                   />\r\n\r\n                   <Button type=\"submit\" className={classes.sendButton} color=\"primary\" variant=\"contained\"> Send </Button>\r\n                 </form>\r\n \r\n                </Grid>\r\n              </Grid>\r\n          </Container>\r\n      </Grow>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, { useEffect, useState } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport './Messages.css';\r\n\r\nconst user = JSON.parse(localStorage.getItem('profile'));\r\nlet currentUser = user?.result?._id;\r\n\r\nconst Messages = ({ message }) => {\r\n\r\n    const [justifyContentVal, setJustifyContentVal] = useState(\"\");\r\n    const [background, setBackground] = useState(\"\");\r\n    useEffect(() => {\r\n\r\n        if(message.owner === currentUser) {\r\n            setJustifyContentVal('flex-start');\r\n            setBackground('#2534da');\r\n        } else {\r\n            setJustifyContentVal('flex-end');\r\n            setBackground('#61658f');\r\n        }\r\n\r\n    },[]);\r\n\r\n    return (\r\n        // <Grid style={{ display: \"flex\", justifyContent:`${message.owner === currentUser ? 'flex-start':'flex-end'}` }} item xs={12} sm={12} md={12}>\r\n        <Grid style={{ display: \"flex\", justifyContent: justifyContentVal }} item xs={12} sm={12} md={12}>    \r\n            {/* <p className=\"sentText pr-10\">{message.owner}</p> */}\r\n            <Typography className=\"messageBox\" style={{ background: background}}>\r\n                    {message.content}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Messages;","import { CircularProgress, Typography, Paper, Grid } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport Messages from './Messages.js';\r\n\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\n\r\nlet socket;\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: '100%',\r\n      height: '70vh'\r\n    },\r\n    headBG: {\r\n        backgroundColor: '#e0e0e0'\r\n    },\r\n    borderLeft500: {\r\n      borderLeft: '1px solid #e0e0e0'\r\n    },\r\n    messagesContainer: {\r\n      //  display: \"flex\",\r\n      //  justifyContent: \"flex-end\"\r\n   \r\n    },\r\n    messageArea: {\r\n      height: '70vh',\r\n     // overflowY: 'auto'\r\n    },\r\n    gridList: {\r\n      width: 300,\r\n      height: 450,\r\n    },\r\n    mainContainer: {\r\n      display: 'flex',\r\n      height: '53vh',\r\n      //overflowY: 'auto',\r\n      backgroundColor: '#fda01d',\r\n     // scrollIntoView: 'end'\r\n\r\n    },\r\n    purple: {\r\n      // color: deepPurple[500],\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n    messsages: {\r\n      height: 600,\r\n      width: 400\r\n    },\r\n    scrollFeed: {\r\n      height: 200,\r\n      backgroundColor: '#e0e0e0'\r\n    }\r\n\r\n  \r\n  });\r\n\r\nconst Message = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector((state) => state.messages);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n    const ENDPOINT = 'localhost:5555';\r\n\r\n    console.log('[MESSAGE]: conversation_id', conversation_data.conversation_id);\r\n\r\n    useEffect(() => {\r\n      \r\n    console.log('[MESSAGE]: useEffect 1', conversation_data.conversation_id, '\\n',conversation_data.conversation_name);\r\n\r\n        if(conversation_data.conversation_id === undefined || conversation_data.conversation_id.length === 0) {\r\n           //do nothing....\r\n        }\r\n        else {\r\n          dispatch(getMessages(conversation_data.conversation_id));\r\n\r\n        }\r\n\r\n    },[]);\r\n\r\n  \r\n    const [receiveMessage, setReceiveMessage] = useState(0);\r\n\r\n    socket = io(ENDPOINT);\r\n    socket.on('updateMessage', (data) => {\r\n      console.log('kamon-[MESSAGE] socket.on.updateMessage data:', data);\r\n      setReceiveMessage(data.updatingFlag);\r\n    });\r\n\r\n    useEffect(() => {\r\n      if(conversation_data.conversation_id === undefined || conversation_data.conversation_id.length === 0) {\r\n        //do nothing....\r\n      }\r\n      else {\r\n       dispatch(getMessages(conversation_data.conversation_id));\r\n     \r\n      }\r\n\r\n    },[receiveMessage])\r\n\r\n \r\n    return(\r\n        <>\r\n          <Typography> \r\n            CONVERSATION WITH : &nbsp;&nbsp; {!conversation_data?.conversation_with?.name?.length ? conversation_data.conversation_name :  conversation_data?.conversation_with?.name}\r\n          </Typography>\r\n\r\n          {!messages?.length ? <CircularProgress /> : (\r\n              <ReactScrollableFeed className={classes.scrollFeed}>\r\n                    {messages.map((message) => (\r\n                        <Grid  key={message._id} container item xs={12} sm={12} md={12}>\r\n                            <Messages message={message}/>\r\n                        </Grid>\r\n                    ))}          \r\n                </ReactScrollableFeed>\r\n          )}\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","import { FETCH_USERS, UPDATE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.fetchUsers();\r\n\r\n      dispatch({ type: FETCH_USERS, payload: data });\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.updateUser(id, user);\r\n       dispatch({ type: UPDATE, payload: data});\r\n     \r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Button, CircularProgress, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { getUsers } from '../../actions/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConversationWith } from '../../actions/chat/conversation'\r\nimport {  resetMessages } from '../../actions/chat/message'\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n     // height: '53vh',\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d',\r\n      align: 'left'\r\n    },\r\n  \r\n  });\r\n\r\n\r\nconst UserList = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userlist = useSelector((state) => state.users)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n    },[]);\r\n\r\n    const [participants, setParticipants] = useState({ name: '', id: ''});\r\n    console.log('[USERLIST] participants: ', participants);\r\n    console.log('[USERLIST] userlist: ', userlist);\r\n\r\n     useEffect(() => {\r\n         if(participants.length !== 0 || participants !== undefined) {\r\n            dispatch(setConversationWith(participants));\r\n            dispatch(resetMessages());\r\n           //todo: check if the participants has conversation if null reset the message component into new OR =>\r\n           //optimize userList => show only the user that has no conversation at all to current user logged in\r\n         }\r\n\r\n     },[participants])\r\n\r\n    return (\r\n         \r\n        !userlist?.length ? <CircularProgress /> : (                        \r\n                    <Grid container className={classes.mainContainer} component={Paper} >\r\n                        \r\n                        <Typography> USER LIST  </Typography> \r\n                        {userlist.map((user) => (\r\n                         <Grid item lg={12} md={12} sm={12}>\r\n                            <Button  variant=\"contained\" color=\"primary\" fullWidth onClick={() => setParticipants({name: user.firstname, id: user._id})}>\r\n                               <Typography> {user.firstname}  </Typography>                     \r\n                            </Button>  \r\n                         </Grid>\r\n                        ))}            \r\n                    </Grid>              \r\n            )\r\n    );\r\n}\r\n\r\nexport default UserList","import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n\n// import memories from '../../images/memories.png';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Chat from '../Chat/Chat';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  //console.log('laman ng user: ', user?.result?._id);\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/auth');\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Home</Typography> &nbsp;\n\n        {(user?.result)  && (\n          <div>\n              <Typography component={Link} to=\"/user/profile\" className={classes.heading} variant=\"h2\" align=\"center\">Profile</Typography>\n              &nbsp;\n              <Typography component={Link} to=\"/chat\" className={classes.heading} variant=\"h2\" align=\"center\">Messenger</Typography>\n          </div>\n        )}\n\n      </div>\n\n      <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            <Avatar className={classes.purple} alt={user?.result.firstname} src={user?.result.imageUrl}>{user?.result.firstname.charAt(0)}</Avatar>\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.firstname}</Typography>\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"Firstname\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Lastname\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          {/* <GoogleLogin\n            clientId=\"67355013266-7mehrhtmnqjdn9al2i76190hsjfc3dic.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          /> */}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n    float: 'right'\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\r\nimport { TextField, Grid } from '@material-ui/core';\r\n\r\nconst Input = ({ name, onChange, label, half, autoFocus, type, value }) => (\r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField \r\n          type={type}     \r\n          name={name}\r\n          defaultValue = {value}\r\n          onChange={onChange}          \r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth       \r\n          label={label}\r\n          autoFocus={autoFocus}\r\n           \r\n        />\r\n    </Grid>\r\n);\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Paper, Grid, Typography, Container, Grow } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateUser } from '../../actions/users';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstname: '', lastname: '', email: '' };\r\n\r\nconst Profile = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const currentUserId = user?.result?._id;\r\n    const email = user?.result?.email;\r\n    const firstname = user?.result?.firstname;\r\n    const lastname = user?.result?.lastname;\r\n\r\n    console.log('[PROFILE] currentUserId: ', currentUserId);\r\n    console.log('[PROFILE] handleSubmit/localStorage-email: ', email);\r\n    console.log('[PROFILE] handleSubmit/localStorage-firstname: ', firstname);\r\n    console.log('[PROFILE] handleSubmit/localStorage-lastname: ', lastname);\r\n  \r\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(updateUser(currentUserId, {...form, firstName: user?.result?.firstname}));\r\n        dispatch(updateUser(currentUserId, form));\r\n    }\r\n\r\n    return(\r\n      <Grow in>    \r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\"> Update Profile </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>      \r\n              <Input name=\"firstname\" label=\"Firstname\"  value={firstname} onChange={handleChange}  half />\r\n              <Input name=\"lastname\" label=\"Lastname\" value={lastname}  onChange={handleChange} half />                    \r\n              <Input name=\"email\" label=\"Email Address\" value={email}  onChange={handleChange} type=\"email\" />\r\n\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              UPDATE\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n      </Grow>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\nimport Profile from './components/User/Profile';\nimport Chat from './components/Chat/Chat';\n\n\nconst App = () => (\n  <BrowserRouter>\n    <Container maxWidth=\"lg\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/chat\" exact component={Chat} />\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/user/profile\" exact component={Profile}/>\n      </Switch>\n    </Container>\n  </BrowserRouter>\n);\n\nexport default App;\n","import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth.js';\nimport conversationsReducer from './chat/conversations.js';\nimport messagesReducer from './chat/messages.js';\nimport postsReducer from './posts.js';\nimport usersReducer from './users.js';\n\nimport conversationIdReducer from './chat/conversations-conversation-id.js';\n\nexport default combineReducers({ \n    auth: authReducer,\n    conversations: conversationsReducer,\n    conversation_data: conversationIdReducer,\n    messages: messagesReducer,\n    posts: postsReducer,\n    users: usersReducer\n\n});\n","import { FETCH_CONVERSATION, LOGOUT } from '../../constants/actionTypes';\r\n\r\nexport default (conversations = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_CONVERSATION: \r\n         return action.payload;\r\n      case LOGOUT:\r\n        return conversations = [];\r\n\r\n      default:\r\n        return conversations;\r\n    }\r\n  };\r\n  ","import {  SET_CONVERSATION_ID, LOGOUT, SET_CONVERSATION_WITH } from '../../constants/actionTypes';\r\n\r\nexport default (conversation_data = [], action) => {\r\n    switch (action.type) {\r\n        case SET_CONVERSATION_ID:\r\n            return action.payload\r\n        case SET_CONVERSATION_WITH:\r\n            return {...conversation_data, conversation_with: action.payload}\r\n        case LOGOUT:\r\n            return conversation_data = []\r\n      default:\r\n        return conversation_data;\r\n    }\r\n  };\r\n  ","import { FETCH_MESSAGES, LOGOUT, RESET_MESSAGES } from '../../constants/actionTypes';\r\n\r\nexport default (messages = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_MESSAGES:\r\n        return action.payload;\r\n      case RESET_MESSAGES:\r\n        return messages = [];\r\n      case LOGOUT:\r\n        return messages = [];\r\n      default:\r\n        return messages;\r\n    }\r\n  };","import _ from 'lodash';\nimport { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE , LOGOUT} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  //console.log('client/src/reducers/chat/posts/action.payload: ', action.payload,'\\n','client/src/reducers/chat/posts/posts: ', posts);\n  switch (action.type) {\n    case FETCH_POSTS:\n      return action.payload;\n\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n\n    case LOGOUT:\n        return posts = [];\n\n    default:\n      return posts;\n  }\n};\n\n","import { UPDATE, FETCH_USERS } from '../constants/actionTypes';\r\n\r\nexport default (users = [], action) => {\r\n   // console.log('client/src/reducers/chat/users action.payload: ', action.payload,'\\n','client/src/reducers/chat/users/users: ', users);\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return action.payload;        \r\n        case UPDATE: \r\n            return users.map((user) => (user._id === action.payload._id ? action.payload: user));\r\n\r\n        default:\r\n            return users; \r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducers from './reducers/index';\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}