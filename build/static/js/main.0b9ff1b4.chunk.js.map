{"version":3,"sources":["constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","actions/users.js","components/User/styles.js","components/User/Input.js","components/User/Profile.js","actions/chat/message.js","actions/chat/conversation.js","components/Chat/Conversation.js","components/Chat/Messages.js","components/Chat/Message.js","components/User/UserList.js","components/Chat/Input.js","components/Chat/Chat.js","App.js","reducers/auth.js","reducers/index.js","reducers/chat/conversations.js","reducers/chat/conversations-conversation-id.js","reducers/chat/messages.js","reducers/posts.js","reducers/users.js","index.js"],"names":["LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","likePost","id","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","post","signUp","updateUser","updatedUser","fetchConversation","userId","get","fetchMessages","conversationId","createPost","dispatch","a","newPost","data","type","payload","console","log","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","useDispatch","classes","useStyles","user","useState","Likes","likes","length","find","like","result","googleId","_id","fontSize","Card","className","CardMedia","image","selectedFile","Typography","variant","owner","moment","createdAt","fromNow","creator","Button","onClick","style","size","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","disabled","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","Grid","container","key","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","useEffect","clear","handleSubmit","e","preventDefault","firstname","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","align","breakpoints","down","Home","Grow","in","Container","justify","lg","appBar","leftDiv","paddingLeft","rightDiv","paddingRight","heading","textDecoration","marginLeft","profile","userName","avatar","palette","getContrastText","deepPurple","Navbar","setUser","location","useLocation","history","useHistory","logout","actionType","push","decode","exp","Date","getTime","AppBar","Link","to","Toolbar","Avatar","alt","src","imageUrl","charAt","marginTop","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","maxWidth","elevation","router","signin","prevIsSignup","float","defaultValue","lastname","Profile","currentUserId","getMessages","getConversation","setConversationWith","socket","io","overflowY","purple","Label","fontWeight","Conversation","conversation","conversations","conversation_data","conversation_id","conversation_name","conversationData","setConversationData","undefined","updatingFlag","setUpdatingFlag","on","Messages","justifyContentVal","setJustifyContentVal","setBackgroundColor","currentUser","background","content","scrollFeed","Message","messages","typing","SetTyping","emitMessageRespond","setEmitMessageRespond","conversation_with","userLink","UserList","userlist","users","participants","setParticipants","error","sendButton","messageTextfield","messsageData","setMessageData","keyPressCount","setKeyPressCount","lastMessageId","conAndMsgData","myMessage","setMyMessage","handleMessage","prev","newMessage","emit","conversationAndMessage","newConversationAndMessage","onKeyPress","messageBody","controller","messagePaper","Chat","userList","App","path","exact","Auth","authReducer","authData","action","setItem","stringify","loading","errors","combineReducers","auth","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b9ff1b4.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH = 'FETCH';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\n//USERS\nexport const FETCH_USERS = 'FETCH_USERS';\n\n//POSTS\nexport const FETCH_POST = 'FETCH_POST';\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\n//CONVERSATION\nexport const FETCH_CONVERSATION = 'FETCH_CONVERSATION';\nexport const FETCH_CONVERSATIONS = 'FETCH_CONVERSATIONS';\nexport const SET_CONVERSATION_ID = 'SET_CONVERSATION';\nexport const GET_CONVERSATION_ID = 'GET_CONVERSATION';\nexport const SET_CONVERSATION_WITH = 'SET_CONVERSATION_WITH';\nexport const CREATE_CONVERSATION = 'CREATE_CONVERSATION';\nexport const CREATE_CONVERSATION_AND_MESSAGE = 'CREATE_CONVERSATION_AND_MESSAGE';\nexport const RESET_CONVERSATION_DATA = 'RESET_CONVERSATION_DATA';\n\n//MESSAGE\nexport const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\n\n","import axios from 'axios';\n \n//cloud\n const API = axios.create({ baseURL: 'https://kamonrarara.herokuapp.com' });\n\n//local\n// const API = axios.create({ baseURL: 'http://localhost:5555' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = () => API.get('/posts');\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/users/signin', formData);\nexport const signUp = (formData) => API.post('/users/signup', formData);\n\nexport const fetchUsers = () => API.get('/users');\nexport const updateUser = (id, updatedUser) => API.patch(`/users/profile/${id}`, updatedUser);\n\nexport const fetchConversation = (userId) => API.get(`/chat/conversations/${userId}`);\n\nexport const createConversation = (newConversation) => API.post('/chat/conversations', newConversation);\nexport const createConversationAndMessage = (newConversationAndMessage) => API.post('/chat/conversations', newConversationAndMessage);\n\nexport const fetchMessages = (conversationId) => API.get(`/chat/messages/${conversationId}`);\nexport const createMessage = (newMessage) => API.post('/chat/messages', newMessage);\n\n\n","import { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE, FETCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n   // console.log('client>src>action>posts>getPost with param id:  ', id);\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH, payload: data});\n  }\n  catch (error) {\n    console.log('client>src>action>posts>getPost ERROR: ', error);\n  }\n};\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n    \n    dispatch({ type: FETCH_POSTS, payload: data });\n  } catch (error) {\n    console.log('client>src>action>posts>getPosts: ', error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    //console.log('action/action/createPost payload data: ', data);\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n\n    const { data } = await api.updatePost(id, post);\n    \n    //console.log('action/action/updatePost payload data: ', data);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { likePost, deletePost, getPost } from '../../../actions/posts';\nimport useStyles from './styles';\n\n// import io from 'socket.io-client';\n\n// let socket;\n// const ENDPOINT = 'localhost:5555';\n\nconst Post = ({ post, setCurrentId }) => {\n\n  // message debugger...\n  console.log('[POST] ', post);\n\n  //THIS SELECTOR WILL FIND THE UPDATED POST AND RE-RENDER THE UPDATED DATA..\n  //const updatedPost = useSelector((state) => (state.posts.find((post) => post._id === post._id)));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  //socket = io(ENDPOINT);\n  const [like, setLike] = useState(false);\n\n  // useEffect(() => {\n  //     console.log(\n  //       '-[POST] 1ST useEffect ','\\n',\n  //       'likes: ', post.likes.length,'\\n',\n  //       'title', post.title\n  //       );\n\n  // },[post]);\n\n\n  // useEffect(() => {\n\n  //   console.log(\n  //     '-[POST] 2ND useEffect ','\\n',\n  //     'likes: ', post.likes.length,'\\n',\n  //     'title:', post.title\n  //     );\n\n  //     socket.on('updateLike', () => {\n  //     console.log('-[POST] ',\n  //     '2ND  useEffect when like is clicked => received => dataFrom => server => io.emit.');\n  //     setLike(true);\n   \n  //   });\n  // }, []); \n\n  const handleLikesEvent = () => {\n         //console.log('handleLikesEvent/likes: ', post.likes.length);\n         dispatch(likePost(post._id));\n  }\n\n  const Likes = () => { \n      //console.log('-[POST] THIS LINE IS BELOW Likes()');\n      if (post?.likes?.length > 0) {\n        return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n          ? (\n            <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n          ) : (\n            <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n          );\n      }    \n\n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;    \n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.owner}</Typography>\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n      </div>\n      {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n      <div className={classes.overlay2}>\n        <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n      )}\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post?.tags?.map((tag) => `#${tag} `)}</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        {/* <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}> */}\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLikesEvent}>\n\n          <Likes /> \n        </Button>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n\n  const classes = useStyles();\n  const posts = useSelector((state) => state.posts);\n\n  console.log('[POSTS] useSelector posts: ', posts);\n\n\n  // useEffect(() => {\n  //   console.log('-[POSTS] useEffect posts: ', posts);\n  //   console.log('-[POSTS] useEffect conversations: ', temp);\n  // },[posts])\n\n\n  return (\n    !posts.length ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12} sm={6} md={6}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n\n\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n  const [postData, setPostData] = useState({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null)) ;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, owner: user?.result?.firstname }));\n      clear();\n    } else {\n      \n      dispatch(updatePost(currentId, { ...postData, owner: user?.result?.firstname}));\n      clear();\n    }\n  };\n\n  if (!user?.result?._id) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPosts } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.down('md')]: {\n    mainContainer: {\n      flexDirection: 'column-reverse',\n    }\n  },\n\n\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n\n\n  }, [currentId, dispatch]);\n\n  return (\n    <Grow in>\n      <Container>\n        <Grid container className={classes.mainContainer} justify= \"space-between\" alignItems= \"stretch\"  >\n          <Grid item xs={12} sm={12} md={12} lg={7} >\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12} lg={4} >\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n\n};\n\nexport default Home;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n\n  leftDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: '33px'\n  },\n\n  rightDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingRight: '33px'\n  },\n\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n    fontSize: '16px'\n  },\n  image: {\n    marginLeft: '15px',\n  },\n\n  profile: {\n    display: 'flex',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n    padding : '11px 11px 11px 11px'\n  },\n\n  avatar: {\n    padding : '11px 11px 11px 11px',\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n\n}));\n","import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n    history.push('/auth');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n\n        <div className={classes.leftDiv}>\n          <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Home</Typography> &nbsp;\n              {(user?.result)  && (\n                <div>\n                    <Typography component={Link} to=\"/user/profile\" className={classes.heading} variant=\"h2\" align=\"center\">Profile</Typography>\n                    &nbsp;\n                    <Typography component={Link} to=\"/chat\" className={classes.heading} variant=\"h2\" align=\"center\">Messenger</Typography>\n                </div>\n              )}\n        </div>\n\n        <div className={classes.rightDiv}>\n            <Toolbar>\n                {user?.result ? \n                (\n                  <div className={classes.profile}>\n                    <Avatar className={classes.avatar} alt={user?.result.firstname} src={user?.result.imageUrl}>{user?.result.firstname.charAt(0)}</Avatar>\n                    <Typography className={classes.userName} variant=\"h6\">{user?.result.firstname}</Typography>\n                    <Button variant=\"contained\"  color=\"secondary\" onClick={logout}>Logout</Button>\n                  </div>\n                ) : \n                (\n                  <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                )}\n          </Toolbar>\n        </div>\n\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"Firstname\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Lastname\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          {/* <GoogleLogin\n            clientId=\"67355013266-7mehrhtmnqjdn9al2i76190hsjfc3dic.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          /> */}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { FETCH_USERS, UPDATE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.fetchUsers();\r\n\r\n      dispatch({ type: FETCH_USERS, payload: data });\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.updateUser(id, user);\r\n       dispatch({ type: UPDATE, payload: data});\r\n     \r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n    float: 'right'\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\r\nimport { TextField, Grid } from '@material-ui/core';\r\n\r\nconst Input = ({ name, onChange, label, half, autoFocus, type, value }) => (\r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField \r\n          type={type}     \r\n          name={name}\r\n          defaultValue = {value}\r\n          onChange={onChange}          \r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth       \r\n          label={label}\r\n          autoFocus={autoFocus}\r\n           \r\n        />\r\n    </Grid>\r\n);\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Paper, Grid, Typography, Container, Grow } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateUser } from '../../actions/users';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstname: '', lastname: '', email: '' };\r\n\r\nconst Profile = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const currentUserId = user?.result?._id;\r\n    const email = user?.result?.email;\r\n    const firstname = user?.result?.firstname;\r\n    const lastname = user?.result?.lastname;\r\n\r\n    console.log('[PROFILE] currentUserId: ', currentUserId);\r\n    console.log('[PROFILE] handleSubmit/localStorage-email: ', email);\r\n    console.log('[PROFILE] handleSubmit/localStorage-firstname: ', firstname);\r\n    console.log('[PROFILE] handleSubmit/localStorage-lastname: ', lastname);\r\n  \r\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(updateUser(currentUserId, {...form, firstName: user?.result?.firstname}));\r\n        dispatch(updateUser(currentUserId, form));\r\n    }\r\n\r\n    return(\r\n      <Grow in>    \r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\"> Update Profile </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>      \r\n              <Input name=\"firstname\" label=\"Firstname\"  value={firstname} onChange={handleChange}  half />\r\n              <Input name=\"lastname\" label=\"Lastname\" value={lastname}  onChange={handleChange} half />                    \r\n              <Input name=\"email\" label=\"Email Address\" value={email}  onChange={handleChange} type=\"email\" />\r\n\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              UPDATE\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n      </Grow>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { FETCH_MESSAGES, CREATE_MESSAGE, RESET_MESSAGES } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n// import history from '../../history';\r\n\r\nexport const getMessages = conversationId => async dispatch => {\r\n\r\n    try {\r\n        const { data } = await api.fetchMessages(conversationId);\r\n\r\n        dispatch({ type: FETCH_MESSAGES, payload: data});\r\n       // history.push('/chat');\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR]-redux-action-chat-message: ', error.name);\r\n    }\r\n};\r\n\r\nexport const createMessage = message => async dispatch => {\r\n    try {\r\n        const { data } = await api.createMessage(message);\r\n        dispatch({ type: CREATE_MESSAGE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('action-createMessage error: ',error);\r\n    }\r\n};\r\n\r\nexport const resetMessages = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_MESSAGES});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n","import { FETCH_CONVERSATION, SET_CONVERSATION_ID, SET_CONVERSATION_WITH, CREATE_CONVERSATION, CREATE_CONVERSATION_AND_MESSAGE, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n\r\nexport const resetConversationData  = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_CONVERSATION_DATA});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n};\r\n\r\nexport const getConversation = (userId) => async (dispatch) => {\r\n    \r\n    try {\r\n        const { data } = await api.fetchConversation(userId);\r\n  \r\n        dispatch({ type: FETCH_CONVERSATION, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-GET-CONVERSATION]', error.name);\r\n    }\r\n};\r\n\r\nexport const createConversation = (conversation) => async (dispatch) => {\r\n\r\n    try {\r\n        const { data } = await api.createConversation(conversation);\r\n        dispatch({ type: CREATE_CONVERSATION, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION]', error.name);\r\n    }\r\n\r\n}\r\nexport const createConversationAndMessage = (conversationAndMessage) => async (dispatch) => {\r\n        console.log('conversationAndMessageeee: ', conversationAndMessage);\r\n    try {\r\n        const { data } = await api.createConversationAndMessage(conversationAndMessage);\r\n        dispatch({ type: CREATE_CONVERSATION_AND_MESSAGE, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION-AND-MESSAGE]', error.name);\r\n    }\r\n\r\n}\r\n\r\nexport const setConversationId = (payload) =>  {\r\n    return {\r\n        type: SET_CONVERSATION_ID,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setConversationWith = (payload) => {\r\n    return {\r\n        type: SET_CONVERSATION_WITH,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n","import { CircularProgress, Link, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport { setConversationId, setConversationWith } from '../../actions/chat/conversation';\r\nimport io from 'socket.io-client';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\n\r\nlet socket = io('localhost:5555');\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    mainContainer: {\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d'\r\n    },\r\n    purple: {\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n\r\n    }\r\n  \r\n  });\r\n\r\nconst Conversation = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const conversation = useSelector((state) => state.conversations);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n    const conversationId = conversation_data?.conversation_id; \r\n    const [conversationData, setConversationData] = useState({ conversation_id: '', conversation_name: ''});\r\n\r\n    useEffect(() => {\r\n      if(conversationData.conversation_id !== 0 || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== undefined) {\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n        dispatch(setConversationId({ conversation_id: conversationData.conversation_id, conversation_name: conversationData.conversation_name }));\r\n        dispatch(setConversationWith(conversation.name));\r\n\r\n      }\r\n\r\n    },[conversationData]);\r\n\r\n\r\n    const [updatingFlag, setUpdatingFlag] = useState(0);\r\n \r\n    useEffect(() => {\r\n\r\n        if(updatingFlag !== 0) {\r\n            socket.on('updateMessage', (data) => {\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n        \r\n            socket.on('updateConversation', (data) => {\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n\r\n        }\r\n\r\n\r\n        dispatch(getConversation(userId));\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n    },[updatingFlag]);\r\n\r\n    const handleClick = data => {\r\n      if(conversationData.conversation_id !== 0 || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== undefined) {\r\n        setConversationData({...conversationData, ...data});\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return(\r\n           !conversation?.length ? <CircularProgress /> : (       \r\n                  <Grid container className={classes.mainContainer} component={Paper} >\r\n                    <Typography className={classes.Label}> My Inbox </Typography> \r\n                        {conversation.map((conversation) => (\r\n                          <Grid container item lg={12} md={12} sm={12}>\r\n                                     \r\n                               <MessageIcon/> \r\n                               {/* <Link component=\"button\" onClick={() => setConversationData({conversation_id: conversation._id, conversation_name: conversation.name})}> */}\r\n                               <Link component=\"button\" onClick={() => handleClick({conversation_id: conversation._id, conversation_name: conversation.name})}>                              \r\n                               <Typography > {conversation.name}</Typography>\r\n                              </Link>\r\n                          </Grid> \r\n\r\n                        ))}            \r\n                  </Grid>)\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect, useState } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport './Messages.css';\r\n// import io from 'socket.io-client';\r\n\r\nconst Messages = ({ message }) => {\r\n\r\n    const [justifyContentVal, setJustifyContentVal] = useState(\"\");\r\n    const [backgroundColor, setBackgroundColor] = useState({ color: ''});\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    let currentUser = user?.result?._id;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(message.owner === currentUser) {\r\n            setJustifyContentVal('flex-start');\r\n            setBackgroundColor({...backgroundColor, color: '#2534da'});\r\n        } else {\r\n            setJustifyContentVal('flex-end');\r\n            setBackgroundColor({...backgroundColor, color: '#61658f'});\r\n        }\r\n\r\n    },[message]);\r\n\r\n    return (\r\n        <Grid style={{ display: \"flex\", justifyContent: justifyContentVal }} item xs={12} sm={12} md={12}>    \r\n            <Typography className=\"messageBox\" style={{ background: backgroundColor.color}}>\r\n                    {message.content}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Messages;","import { CircularProgress, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport Messages from './Messages.js';\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\nimport io from 'socket.io-client';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n    scrollFeed: {\r\n      height: 200,\r\n      backgroundColor: '#e0e0e0'\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n      padding: '11px 11px 11px 11px'\r\n    }\r\n\r\n  \r\n  });\r\n\r\n  let socket = io('localhost:5555');\r\n\r\nconst Message = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector((state) => state.messages);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    useEffect(() => {\r\n        if(conversation_data.conversation_id !== undefined) {\r\n            dispatch(getMessages(conversation_data.conversation_id));\r\n        }\r\n    },[]);\r\n\r\n\r\n    const [typing, SetTyping] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n            socket.on('typing-activated', data => {\r\n            SetTyping(data);\r\n            console.log('[MESSAGE] socket.on.typing-activated-data: ', data);\r\n            })\r\n    },[typing])\r\n\r\n    const [emitMessageRespond, setEmitMessageRespond] = useState(0);\r\n    useEffect(() => {\r\n\r\n        if(conversation_data.conversation_id !== undefined) {\r\n          \r\n          dispatch(getMessages(conversation_data.conversation_id));\r\n\r\n          }\r\n\r\n      socket.on('updateMessage', data => {\r\n        console.log('[MESSAGE]: socket-on-updateMessage ', data);\r\n        setEmitMessageRespond(data);\r\n    });\r\n\r\n    }, [emitMessageRespond])\r\n\r\n    return(\r\n        <>\r\n          <Typography className={classes.Label}> \r\n\r\n            CONVERSATION WITH : &nbsp;&nbsp; \r\n          \r\n            {!conversation_data?.conversation_with?.name?.length \r\n                ? conversation_data.conversation_name \r\n                : conversation_data?.conversation_with?.name\r\n            }\r\n            </Typography>\r\n\r\n          {!messages?.length ? <CircularProgress /> : (\r\n              <ReactScrollableFeed className={classes.scrollFeed}>\r\n                    {messages.map((message) => (\r\n                        <Grid  key={message._id} container item xs={12} sm={12} md={12}>\r\n                            <Messages message={message}/>\r\n                        </Grid>\r\n                    ))}          \r\n                </ReactScrollableFeed>\r\n          )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Grid, Paper, Typography, Link } from '@material-ui/core';\r\nimport { getUsers } from '../../actions/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConversationWith, resetConversationData } from '../../actions/chat/conversation'\r\nimport {  resetMessages } from '../../actions/chat/message'\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d',\r\n   \r\n      padding: '11px 11px 11px 11px'\r\n    },\r\n    userLink: {\r\n        display: 'flex'\r\n    },\r\n    Label: {\r\n        display: 'flex',\r\n        fontWeight: 'bold'\r\n    }\r\n\r\n  });\r\n\r\n\r\nconst UserList = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userlist = useSelector((state) => state.users)\r\n    const conversation_data = useSelector(state => state.conversation_data)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n    },[]);\r\n\r\n    const [participants, setParticipants] = useState({ name: '', id: ''});\r\n\r\n\r\n     useEffect(() => {\r\n         if(participants.length !== 0 || participants !== undefined) {\r\n            //REDUX: Reset the conversation_data when clicking on userlist\r\n            //this reset must go 1st.\r\n            //TODO/TOASK: refactor => w/c is more optimized. reset the whole objects or modify/set the specific props/field *Performance\r\n            dispatch(resetConversationData());\r\n\r\n\r\n            dispatch(setConversationWith(participants));\r\n            dispatch(resetMessages());\r\n           //todo: check if the participants has conversation if null reset the message component into new OR =>\r\n           //optimize userList => show only the user that has no conversation at all to current user logged in\r\n\r\n\r\n         }\r\n\r\n\r\n\r\n     },[participants])\r\n\r\n    return (        \r\n        !userlist?.length ? <CircularProgress /> : (                        \r\n                    <Grid container className={classes.mainContainer} component={Paper} >\r\n                        <Typography className={classes.Label}>List of users</Typography> \r\n                        {userlist.map((user) => (\r\n                            <Link  className={classes.userLink} component=\"button\"  onClick={() => setParticipants({name: user.firstname, id: user._id})}>\r\n                               <Typography > { user.firstname }  </Typography>                     \r\n                            </Link>                    \r\n                        ))}            \r\n                    </Grid>              \r\n            )\r\n    );\r\n}\r\n\r\nexport default UserList","import React, { useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { createMessage } from '../../actions/chat/message';\r\nimport { createConversationAndMessage } from '../../actions/chat/conversation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket = io('localhost:5555');\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    sendButton : {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n      },\r\n      messageTextfield : {\r\n        margin: '22px 11px 11px 11px'\r\n      },\r\n\r\n  });\r\n\r\nconst Input = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    console.log('conversation_data: ', conversation_data);\r\n\r\n    const [messsageData, setMessageData] = useState({ owner: '', conversationId : '', content: ''});\r\n\r\n    const [keyPressCount, setKeyPressCount] = useState(0);\r\n    \r\n    //TODO: change this code into const var, useState no need\r\n     const [conAndMsgData] = useState({\r\n      conversation:{\r\n        participants: [], name: '', lastMessageId: 333\r\n      },\r\n      messages: {\r\n        owner: '', conversationId : '', content: ''\r\n      }\r\n     })\r\n\r\n     const [myMessage, setMyMessage] = useState('');\r\n     const conversationId = conversation_data?.conversation_id; \r\n\r\n     const clear = () => {\r\n      setMyMessage('');\r\n     }\r\n  \r\n    const handleMessage = async message => {\r\n        if(conversation_data.conversation_with === undefined) {\r\n          setMessageData({ ...messsageData, content: message })     \r\n          setMyMessage(prev => message);\r\n          console.log('myMessagemyMessagemyMessage ', myMessage);\r\n        } else {\r\n          setMyMessage(message);\r\n      \r\n        }\r\n      };\r\n\r\n      const handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        clear();\r\n\r\n       if(conversation_data?.conversation_with === undefined) {\r\n\r\n          dispatch(createMessage({...messsageData, owner: userId, conversationId: conversation_data?.conversation_id}));\r\n       \r\n           socket.emit('sendMessage', { type: 'message' }, () => {\r\n                  console.log('[CHAT]: socket.io. emit/sendMessage');\r\n            });\r\n\r\n       } else if (conversation_data?.conversation_with !== undefined) {\r\n\r\n         dispatch(createConversationAndMessage(\r\n           {...conAndMsgData,  \r\n\r\n              conversation: {\r\n                participants: [userId, conversation_data?.conversation_with?.id], \r\n                name: `${conversation_data?.conversation_with?.name}`\r\n              },\r\n              messages: {\r\n                  owner: userId,\r\n                  content: myMessage\r\n              } \r\n           }\r\n          \r\n          ));\r\n\r\n            // create logic: add send_message_type: there are 2 types:\r\n            // 1: update conversation and message \r\n            // 2: message only\r\n           socket.emit('sendMessage', {type: 'conversation-message'});\r\n\r\n       } else {\r\n         console.log('[CHAT]: do nothing...')\r\n       }\r\n\r\n  };\r\n\r\n\r\n\r\n    \r\n    const handleKeyPress = () => {\r\n\r\n      //when user is typing store the number of keypress in let as counter and use that let on logics ahead\r\n      //avoid the enter key here\r\n       setKeyPressCount(prev => prev + 1);\r\n\r\n      console.log('[INPUT] handleKeyPress: ', keyPressCount);\r\n\r\n      socket.emit('typing', { userId: userId, conversationId: conversationId });\r\n\r\n      socket.on('typing-activated', data => {\r\n        console.log('server response: ', data);\r\n      })\r\n    }\r\n\r\n    return (\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <TextField \r\n                    className={classes.messageTextfield} \r\n                    name=\"message\"\r\n                    variant=\"outlined\" \r\n                    label=\"Message\"\r\n                    fullWidth multiline rows={2} \r\n                    onChange={(e) => handleMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    value={myMessage}\r\n\r\n                />\r\n\r\n                <Button type=\"submit\" className={classes.sendButton} color=\"primary\" variant=\"contained\"> Send </Button>\r\n            </form>\r\n    )\r\n};\r\n\r\nexport default Input;","import { Grid, Grow, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Conversation from './Conversation';\r\nimport Message from './Message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport UserList from './../User/UserList';\r\nimport Input from './Input';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  messageBody: {\r\n    padding: 10,\r\n  },\r\n  controller: {\r\n    padding: 10,\r\n  },\r\n \r\n  messageTextfield : {\r\n    margin: '22px 11px 11px 11px'\r\n  },\r\n  messagePaper : {\r\n    paddingTop: 30\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n\r\n  }\r\n\r\n});\r\n    \r\nconst Chat = () => {\r\n\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const conversation = useSelector((state) => state.conversations);\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversation(userId));\r\n    },[]);\r\n\r\n  return (\r\n    <Grow in>\r\n    <Container>\r\n        <Grid className={classes.container} container>\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.userList} >\r\n                <UserList/>\r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4}  className={classes.userList} >\r\n                <Conversation /> \r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.controller}>\r\n                {conversation !== null ? <Message /> : null}\r\n                <Input />\r\n            </Grid>\r\n          </Grid>\r\n      </Container>\r\n      </Grow>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\nimport Profile from './components/User/Profile';\nimport Chat from './components/Chat/Chat';\n\n\nconst App = () => (\n  <BrowserRouter>\n    <Container maxWidth=\"lg\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/chat\" exact component={Chat} />\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/user/profile\" exact component={Profile}/>\n      </Switch>\n    </Container>\n  </BrowserRouter>\n);\n\nexport default App;\n","import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth.js';\nimport conversationsReducer from './chat/conversations.js';\nimport messagesReducer from './chat/messages.js';\nimport postsReducer from './posts.js';\nimport usersReducer from './users.js';\n\nimport conversationIdReducer from './chat/conversations-conversation-id.js';\n\nexport default combineReducers({ \n    auth: authReducer,\n    conversations: conversationsReducer,\n    conversation_data: conversationIdReducer,\n    messages: messagesReducer,\n    posts: postsReducer,\n    users: usersReducer\n\n});\n","import { FETCH_CONVERSATION, LOGOUT } from '../../constants/actionTypes';\r\n\r\nexport default (conversations = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_CONVERSATION: \r\n         return action.payload;\r\n      case LOGOUT:\r\n        return conversations = [];\r\n\r\n      default:\r\n        return conversations;\r\n    }\r\n  };\r\n  ","import {  SET_CONVERSATION_ID, LOGOUT, SET_CONVERSATION_WITH, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\n\r\nexport default (conversation_data = [], action) => {\r\n    switch (action.type) {\r\n        case SET_CONVERSATION_ID:\r\n            return action.payload\r\n        case SET_CONVERSATION_WITH:\r\n            console.log('SET_CONVERSATION_WITH::::::: ', conversation_data, '   ', action)\r\n            return {...conversation_data, conversation_with: action.payload}\r\n        case RESET_CONVERSATION_DATA:\r\n            console.log('RESET_CONVERSATION_DATA::::::: ', conversation_data, '   ', action)\r\n            return conversation_data = []\r\n        case LOGOUT:\r\n            return conversation_data = []\r\n      default:\r\n        return conversation_data;\r\n    }\r\n  };\r\n  ","import { FETCH_MESSAGES, LOGOUT, RESET_MESSAGES } from '../../constants/actionTypes';\r\n\r\nexport default (messages = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_MESSAGES:\r\n        return action.payload;\r\n      case RESET_MESSAGES:\r\n        return messages = [];\r\n      case LOGOUT:\r\n        return messages = [];\r\n      default:\r\n        return messages;\r\n    }\r\n  };","import _ from 'lodash';\nimport { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE , LOGOUT} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  //console.log('client/src/reducers/chat/posts/action.payload: ', action.payload,'\\n','client/src/reducers/chat/posts/posts: ', posts);\n  switch (action.type) {\n    case FETCH_POSTS:\n      return action.payload;\n\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n\n    case LOGOUT:\n        return posts = [];\n\n    default:\n      return posts;\n  }\n};\n\n","import { UPDATE, FETCH_USERS } from '../constants/actionTypes';\r\n\r\nexport default (users = [], action) => {\r\n   // console.log('client/src/reducers/chat/users action.payload: ', action.payload,'\\n','client/src/reducers/chat/users/users: ', users);\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return action.payload;        \r\n        case UPDATE: \r\n            return users.map((user) => (user._id === action.payload._id ? action.payload: user));\r\n\r\n        default:\r\n            return users; \r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducers from './reducers/index';\n// import { SocketContext, socket } from './context/socket'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n       <App />\n  </Provider>,\n  document.getElementById('root'),\n); \n"],"sourceRoot":""}