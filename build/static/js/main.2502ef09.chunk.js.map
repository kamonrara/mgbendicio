{"version":3,"sources":["constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/styles.js","components/Pagination.jsx","components/Home/styles.js","components/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","actions/users.js","components/User/styles.js","components/User/Input.js","components/User/Profile.js","actions/chat/message.js","actions/chat/conversation.js","components/Chat/Conversation.js","components/Chat/Messages.js","components/Chat/Message.js","components/User/UserList.js","components/Chat/Input.js","components/Chat/Chat.js","components/PostDetails/styles.js","components/PostDetails/PostDetails.jsx","App.js","reducers/auth.js","reducers/index.js","reducers/chat/conversations.js","reducers/chat/conversations-conversation-id.js","reducers/chat/messages.js","reducers/posts.js","reducers/users.js","index.js"],"names":["LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","likePost","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","post","signUp","updateUser","updatedUser","fetchConversation","userId","fetchMessages","conversationId","getPostsBySearch","searchquery","dispatch","a","type","searchQuery","search","tags","data","payload","console","log","createPost","history","newPost","push","_id","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","cardAction","textAlign","Post","setCurrentId","useDispatch","classes","useStyles","user","useHistory","useState","Likes","likes","length","find","like","result","googleId","fontSize","Card","className","raised","elevation","ButtonBase","component","onClick","CardMedia","image","selectedFile","Typography","variant","owner","moment","createdAt","fromNow","creator","Button","style","size","map","tag","gutterBottom","CardContent","message","CardActions","disabled","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","Posts","useSelector","state","posts","isLoading","CircularProgress","Grid","container","key","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","useEffect","clear","handleSubmit","e","preventDefault","firstname","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","align","ul","Paginate","numberOfPages","getPosts","Pagination","count","Number","renderItem","PaginationItem","Link","to","appBarSearch","pagination","marginTop","gridContainer","breakpoints","down","Home","query","URLSearchParams","useLocation","setSearch","setTags","searchPost","trim","join","Grow","in","Container","maxWidth","justify","AppBar","onKeyPress","keyCode","onAdd","onDelete","tagToDelete","filter","searchButton","appBar","leftDiv","paddingLeft","rightDiv","paddingRight","heading","textDecoration","marginLeft","profile","userName","avatar","palette","getContrastText","deepPurple","Navbar","setUser","location","logout","actionType","decode","exp","Date","getTime","Toolbar","Avatar","alt","src","imageUrl","charAt","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","router","signin","prevIsSignup","float","defaultValue","lastname","Profile","currentUserId","getMessages","getConversation","setConversationWith","socket","io","overflowY","purple","Label","fontWeight","Conversation","conversation","conversations","conversation_data","conversation_id","conversation_name","conversationData","setConversationData","updatingFlag","setUpdatingFlag","on","undefined","Messages","justifyContentVal","setJustifyContentVal","setBackgroundColor","currentUser","background","content","scrollFeed","Message","messages","typing","SetTyping","emitMessageRespond","setEmitMessageRespond","conversation_with","userLink","UserList","userlist","users","participants","setParticipants","error","sendButton","messageTextfield","messsageData","setMessageData","keyPressCount","setKeyPressCount","lastMessageId","conAndMsgData","myMessage","setMyMessage","handleMessage","prev","newMessage","emit","conversationAndMessage","newConversationAndMessage","messageBody","controller","messagePaper","Chat","userList","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","PostDetails","useParams","getPost","Divider","cursor","openPost","App","path","exact","Auth","authReducer","authData","action","setItem","stringify","loading","errors","combineReducers","auth","currentPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2502ef09.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH = 'FETCH';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\n//USERS\nexport const FETCH_USERS = 'FETCH_USERS';\n\n//POSTS\nexport const FETCH_POST = 'FETCH_POST';\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\n//CONVERSATION\nexport const FETCH_CONVERSATION = 'FETCH_CONVERSATION';\nexport const FETCH_CONVERSATIONS = 'FETCH_CONVERSATIONS';\nexport const SET_CONVERSATION_ID = 'SET_CONVERSATION';\nexport const GET_CONVERSATION_ID = 'GET_CONVERSATION';\nexport const SET_CONVERSATION_WITH = 'SET_CONVERSATION_WITH';\nexport const CREATE_CONVERSATION = 'CREATE_CONVERSATION';\nexport const CREATE_CONVERSATION_AND_MESSAGE = 'CREATE_CONVERSATION_AND_MESSAGE';\nexport const RESET_CONVERSATION_DATA = 'RESET_CONVERSATION_DATA';\n\n//MESSAGE\nexport const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\n\n//NEW\nexport const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\n","import axios from 'axios';\n \n//cloud\nconst API = axios.create({ baseURL: 'https://merntradebaits.herokuapp.com/' });\n//  const API = axios.create({ baseURL: 'https://kamonrarara.herokuapp.com' });\n\n//local\n// const API = axios.create({ baseURL: 'http://localhost:5555' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\n\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`) // query params starts with question mark\n\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/users/signin', formData);\nexport const signUp = (formData) => API.post('/users/signup', formData);\n\nexport const fetchUsers = () => API.get('/users');\nexport const updateUser = (id, updatedUser) => API.patch(`/users/profile/${id}`, updatedUser);\n\nexport const fetchConversation = (userId) => API.get(`/chat/conversations/${userId}`);\n\nexport const createConversation = (newConversation) => API.post('/chat/conversations', newConversation);\nexport const createConversationAndMessage = (newConversationAndMessage) => API.post('/chat/conversations', newConversationAndMessage);\n\nexport const fetchMessages = (conversationId) => API.get(`/chat/messages/${conversationId}`);\nexport const createMessage = (newMessage) => API.post('/chat/messages', newMessage);\n\n\n","import { FETCH_POSTS, CREATE, UPDATE, DELETE, LIKE, FETCH, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH, payload: data});\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log('client>src>action>posts>getPost ERROR: ', error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPosts(page);\n    \n    dispatch({ type: FETCH_POSTS, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log('client>src>action>posts>getPosts: ', error);\n  }\n};\n\nexport const getPostsBySearch = (searchquery) => async (dispatch) => {\n\n  try {\n    dispatch({ type: START_LOADING });\n    //destructure 2 times\n    const { data: { data } } = await api.fetchPostsBySearch(searchquery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n\n\n  } catch(error) {\n\n    console.log('getPostsBySearch error: ', error)\n  }\n}\n//accept the history object that came from the front end\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n    history.push(`/posts/${data._id}`)\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n\n    const { data } = await api.updatePost(id, post);\n    \n    //console.log('action/action/updatePost payload data: ', data);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cardAction: {\n    display: 'block',\n    textAlign: 'initial',\n  },\n});\n","import React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom'\n// import io from 'socket.io-client';\n// let socket;\n// const ENDPOINT = 'localhost:5555';\n\nconst Post = ({ post, setCurrentId }) => {\n\n  // message debugger...\n  console.log('[POST] ', post);\n\n  //THIS SELECTOR WILL FIND THE UPDATED POST AND RE-RENDER THE UPDATED DATA..\n  //const updatedPost = useSelector((state) => (state.posts.find((post) => post._id === post._id)));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  //socket = io(ENDPOINT);\n  const [like, setLike] = useState(false);\n\n  // useEffect(() => {\n  //     console.log(\n  //       '-[POST] 1ST useEffect ','\\n',\n  //       'likes: ', post.likes.length,'\\n',\n  //       'title', post.title\n  //       );\n\n  // },[post]);\n\n\n  // useEffect(() => {\n\n  //   console.log(\n  //     '-[POST] 2ND useEffect ','\\n',\n  //     'likes: ', post.likes.length,'\\n',\n  //     'title:', post.title\n  //     );\n\n  //     socket.on('updateLike', () => {\n  //     console.log('-[POST] ',\n  //     '2ND  useEffect when like is clicked => received => dataFrom => server => io.emit.');\n  //     setLike(true);\n   \n  //   });\n  // }, []); \n\n  const handleLikesEvent = () => {\n\n         dispatch(likePost(post._id));\n  }\n\n  const Likes = () => { \n      //console.log('-[POST] THIS LINE IS BELOW Likes()');\n      if (post?.likes?.length > 0) {\n        return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n          ? (\n            <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n          ) : (\n            <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n          );\n      }    \n\n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;    \n  };\n\n  const openPost = () => history.push(`/posts/${post._id}`);\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase\n       component=\"span\"\n       className={classes.cardAction} \n       onClick={openPost}\n       >\n          <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n          <div className={classes.overlay}>\n            <Typography variant=\"h6\">{post.owner}</Typography>\n            <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n          </div>\n          {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n          <div className={classes.overlay2}>\n            <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n              <MoreHorizIcon fontSize=\"default\" />\n            </Button>\n          </div>\n          )}\n          <div className={classes.details}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n          </div>\n          <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n          </CardContent>\n      </ButtonBase>\n      <CardActions className={classes.cardActions}>\n        {/* <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}> */}\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLikesEvent}>\n\n          <Likes /> \n        </Button>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n\n  const classes = useStyles();\n  const { posts, isLoading } = useSelector((state) => state.posts);\n\n  console.log('[POSTS] useSelector posts: ', posts);\n\n\n  if(!posts.length && !isLoading) return 'No posts'\n\n  return (\n    isLoading ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts?.map((post) => (\n          <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n\n\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom';\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n  const [postData, setPostData] = useState({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null)) ;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', owner: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, owner: user?.result?.firstname }, history));\n      // do not call the history here like <history.push>\n      clear();\n    } else {\n      \n      dispatch(updatePost(currentId, { ...postData, owner: user?.result?.firstname}));\n      clear();\n    }\n  };\n\n  if (!user?.result?._id) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    ul: {\r\n        justifyContent: 'space-around'\r\n    }\r\n}))","import React, { useEffect } from 'react'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPosts } from '../actions/posts';\r\n\r\nconst Paginate = ({ page }) => {\r\n\r\n    const { numberOfPages } = useSelector((state) => state.posts)\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(page) dispatch(getPosts(page));\r\n   \r\n      \r\n      }, [page]);\r\n\r\n    return (\r\n        <Pagination\r\n            classes={{ ul: classes.ul }}\r\n            count={numberOfPages}\r\n            page={Number(page) || 1}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            renderItem={(item) => (\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Paginate;","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: '1rem',\r\n    padding: '16px',\r\n  },\r\n  gridContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column-reverse',\r\n      },\r\n  },\r\n}));","\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid , Paper, AppBar, TextField, Button} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { getPosts, getPostsBySearch } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport Pagination from '../Pagination'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport useStyles from './styles';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n  const classes = useStyles();\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const query = useQuery();\n  const history = useHistory();\n  const page = query.get('page') || 1;\n  const searchQuery = query.get('searchQuery');\n\n  const [search, setSearch] = useState('');\n  const [tags, setTags] = useState([]);\n\n  // useEffect(() => {\n  //   dispatch(getPosts());\n  \n  // }, [currentId, dispatch]);\n\n    const searchPost = () => {\n      if(search.trim() || tags) {\n        //dispatch -> fetch search posts\n        dispatch(getPostsBySearch({search, tags:  tags.join(',')  }));\n        history.push(`/posts/search?searchQuery=${search || 'none'} &tags=${tags.join(',')}`);\n      } else {\n        history.push('/')\n      }\n    }\n\n    const handleKeyPress = (e) => {\n      if(e.keyCode === 13) {\n        searchPost();\n      }\n    }\n\n    const handleAdd = (tag) => setTags([... tags, tag]);\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag) => tag !== tagToDelete));\n\n  return (\n    <Grow in>\n      <Container maxWidth=\"xl\">\n        <Grid container justify= \"space-between\" alignItems=\"stretch\"  spacing={3} className={classes.gridContainer} >\n          <Grid item xs={12} sm={6} md={9} >\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n          <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\"> \n            <TextField \n              name=\"search\" \n              variant=\"outlined\" \n              label=\"Search Memories\" \n              fullWidth\n              value={search} \n              onChange={(e) => setSearch(e.target.value)} \n              onKeyPress={handleKeyPress}\n            />\n            <ChipInput \n              style={{ margin: '10px 0'}}\n              value={tags}\n              onAdd={handleAdd}\n              onDelete={handleDelete}\n              label=\"Search Tags\"\n              variant=\"outlined\"\n            />\n\n            <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\n\n          </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n\n            {(!searchQuery && !tags.length) && (\n              <Paper elevation={6} className={classes.pagination}>\n              <Pagination page={page} />\n            </Paper>\n            )}\n\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n\n};\n\nexport default Home;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n\n  leftDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: '33px'\n  },\n\n  rightDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingRight: '33px'\n  },\n\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n    fontSize: '16px'\n  },\n  image: {\n    marginLeft: '15px',\n  },\n\n  profile: {\n    display: 'flex',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n    padding : '11px 11px 11px 11px'\n  },\n\n  avatar: {\n    padding : '11px 11px 11px 11px',\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n\n}));\n","import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n    history.push('/auth');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n\n        <div className={classes.leftDiv}>\n          <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Home</Typography> &nbsp;\n              {(user?.result)  && (\n                <div>\n                    <Typography component={Link} to=\"/user/profile\" className={classes.heading} variant=\"h2\" align=\"center\">Profile</Typography>\n                    &nbsp;\n                    <Typography component={Link} to=\"/chat\" className={classes.heading} variant=\"h2\" align=\"center\">Messenger</Typography>\n                </div>\n              )}\n        </div>\n\n        <div className={classes.rightDiv}>\n            <Toolbar>\n                {user?.result ? \n                (\n                  <div className={classes.profile}>\n                    <Avatar className={classes.avatar} alt={user?.result.firstname} src={user?.result.imageUrl}>{user?.result.firstname.charAt(0)}</Avatar>\n                    <Typography className={classes.userName} variant=\"h6\">{user?.result.firstname}</Typography>\n                    <Button variant=\"contained\"  color=\"secondary\" onClick={logout}>Logout</Button>\n                  </div>\n                ) : \n                (\n                  <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                )}\n          </Toolbar>\n        </div>\n\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"Firstname\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Lastname\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          {/* <GoogleLogin\n            clientId=\"67355013266-7mehrhtmnqjdn9al2i76190hsjfc3dic.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          /> */}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { FETCH_USERS, UPDATE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.fetchUsers();\r\n\r\n      dispatch({ type: FETCH_USERS, payload: data });\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.updateUser(id, user);\r\n       dispatch({ type: UPDATE, payload: data});\r\n     \r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n    float: 'right'\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\r\nimport { TextField, Grid } from '@material-ui/core';\r\n\r\nconst Input = ({ name, onChange, label, half, autoFocus, type, value }) => (\r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField \r\n          type={type}     \r\n          name={name}\r\n          defaultValue = {value}\r\n          onChange={onChange}          \r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth       \r\n          label={label}\r\n          autoFocus={autoFocus}\r\n           \r\n        />\r\n    </Grid>\r\n);\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Paper, Grid, Typography, Container, Grow } from '@material-ui/core';\r\nimport { updateUser } from '../../actions/users';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstname: '', lastname: '', email: '' };\r\n\r\nconst Profile = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const currentUserId = user?.result?._id;\r\n    const email = user?.result?.email;\r\n    const firstname = user?.result?.firstname;\r\n    const lastname = user?.result?.lastname;\r\n\r\n    console.log('[PROFILE] currentUserId: ', currentUserId);\r\n    console.log('[PROFILE] handleSubmit/localStorage-email: ', email);\r\n    console.log('[PROFILE] handleSubmit/localStorage-firstname: ', firstname);\r\n    console.log('[PROFILE] handleSubmit/localStorage-lastname: ', lastname);\r\n  \r\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(updateUser(currentUserId, {...form, firstName: user?.result?.firstname}));\r\n        dispatch(updateUser(currentUserId, form));\r\n    }\r\n\r\n    return(\r\n      <Grow in>    \r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\"> Update Profile </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>      \r\n              <Input name=\"firstname\" label=\"Firstname\"  value={firstname} onChange={handleChange}  half />\r\n              <Input name=\"lastname\" label=\"Lastname\" value={lastname}  onChange={handleChange} half />                    \r\n              <Input name=\"email\" label=\"Email Address\" value={email}  onChange={handleChange} type=\"email\" />\r\n\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              UPDATE\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n      </Grow>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { FETCH_MESSAGES, CREATE_MESSAGE, RESET_MESSAGES } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n// import history from '../../history';\r\n\r\nexport const getMessages = conversationId => async dispatch => {\r\n        console.log('PAKI CHECK PO PLEASE: ', conversationId)\r\n    try {\r\n        const { data } = await api.fetchMessages(conversationId);\r\n\r\n        dispatch({ type: FETCH_MESSAGES, payload: data});\r\n       // history.push('/chat');\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR]-redux-action-chat-message: ', error.name);\r\n    }\r\n};\r\n\r\nexport const createMessage = message => async dispatch => {\r\n    try {\r\n        const { data } = await api.createMessage(message);\r\n        dispatch({ type: CREATE_MESSAGE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('action-createMessage error: ',error);\r\n    }\r\n};\r\n\r\nexport const resetMessages = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_MESSAGES});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n","import { FETCH_CONVERSATION, SET_CONVERSATION_ID, SET_CONVERSATION_WITH, CREATE_CONVERSATION, CREATE_CONVERSATION_AND_MESSAGE, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\nimport * as api from '../../api/index';\r\n\r\nexport const resetConversationData  = () => async dispatch => {\r\n    try {\r\n\r\n        dispatch({ type: RESET_CONVERSATION_DATA});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n};\r\n\r\nexport const getConversation = (userId) => async (dispatch) => {\r\n    \r\n    try {\r\n        const { data } = await api.fetchConversation(userId);\r\n  \r\n        dispatch({ type: FETCH_CONVERSATION, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-GET-CONVERSATION]', error.name);\r\n    }\r\n};\r\n\r\nexport const createConversation = (conversation) => async (dispatch) => {\r\n\r\n    try {\r\n        const { data } = await api.createConversation(conversation);\r\n        dispatch({ type: CREATE_CONVERSATION, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION]', error.name);\r\n    }\r\n\r\n}\r\nexport const createConversationAndMessage = (conversationAndMessage) => async (dispatch) => {\r\n        console.log('conversationAndMessageeee: ', conversationAndMessage);\r\n    try {\r\n        const { data } = await api.createConversationAndMessage(conversationAndMessage);\r\n        dispatch({ type: CREATE_CONVERSATION_AND_MESSAGE, payload: data })\r\n\r\n    } catch (error) {\r\n        console.log('[ERROR][REDUX-ACTION-CREATE-CONVERSATION-AND-MESSAGE]', error.name);\r\n    }\r\n\r\n}\r\n\r\nexport const setConversationId = (payload) =>  {\r\n    return {\r\n        type: SET_CONVERSATION_ID,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setConversationWith = (payload) => {\r\n    return {\r\n        type: SET_CONVERSATION_WITH,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n","import { CircularProgress, Link, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport { setConversationId, setConversationWith } from '../../actions/chat/conversation';\r\nimport io from 'socket.io-client';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\n\r\nlet socket = io('localhost:5555');\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    mainContainer: {\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d'\r\n    },\r\n    purple: {\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n\r\n    }\r\n  \r\n  });\r\n\r\nconst Conversation = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const conversation = useSelector((state) => state.conversations);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n    const conversationId = conversation_data?.conversation_id; \r\n    const [conversationData, setConversationData] = useState({ conversation_id: '', conversation_name: ''});\r\n\r\n    useEffect(() => {\r\n      if(conversationData.conversation_id !== '' || conversationData.conversation_id.length !== 0 || conversationData.conversation_id !== '') {\r\n        dispatch(getMessages(conversationData.conversation_id));\r\n        dispatch(setConversationId({ conversation_id: conversationData.conversation_id, conversation_name: conversationData.conversation_name }));\r\n        dispatch(setConversationWith(conversation.name));\r\n\r\n      }\r\n\r\n    },[conversationData]);\r\n\r\n    const [updatingFlag, setUpdatingFlag] = useState(0);\r\n \r\n    useEffect(() => {\r\n\r\n        if(updatingFlag !== 0) {\r\n            socket.on('updateMessage', (data) => {\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n        \r\n            socket.on('updateConversation', (data) => {\r\n              setUpdatingFlag(data.updatingFlag);\r\n            });\r\n\r\n        }\r\n\r\n        dispatch(getConversation(userId));\r\n        if(conversationData.conversation_id !== '') {\r\n          dispatch(getMessages(conversationData.conversation_id));\r\n        }\r\n  \r\n    },[updatingFlag]);\r\n\r\n    const handleClick = data => {\r\n      if(conversationId !== 0 || conversationId.length !== 0 || conversationId !== undefined) {\r\n        setConversationData({...conversationData, ...data});\r\n\r\n      }\r\n    }\r\n\r\n    return(\r\n           !conversation?.length ? <CircularProgress /> : (       \r\n                  <Grid container className={classes.mainContainer} component={Paper} >\r\n                    <Typography className={classes.Label}> My Inbox </Typography> \r\n                        {conversation.map((conversation) => (\r\n                          <Grid key={conversation._id} container item lg={12} md={12} sm={12}>\r\n                                     \r\n                               <MessageIcon/> \r\n                               {/* <Link component=\"button\" onClick={() => setConversationData({conversation_id: conversation._id, conversation_name: conversation.name})}> */}\r\n                               <Link  key={conversation.conversation_id} component=\"button\" onClick={() => handleClick({conversation_id: conversation._id, conversation_name: conversation.name})}>                              \r\n                               <Typography>{conversation.name}</Typography>\r\n                              </Link>\r\n                          </Grid> \r\n\r\n                        ))}            \r\n                  </Grid>)\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect, useState } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport './Messages.css';\r\n// import io from 'socket.io-client';\r\n\r\nconst Messages = ({ message }) => {\r\n\r\n    const [justifyContentVal, setJustifyContentVal] = useState(\"\");\r\n    const [backgroundColor, setBackgroundColor] = useState({ color: ''});\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    let currentUser = user?.result?._id;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(message.owner === currentUser) {\r\n            setJustifyContentVal('flex-start');\r\n            setBackgroundColor({...backgroundColor, color: '#2534da'});\r\n        } else {\r\n            setJustifyContentVal('flex-end');\r\n            setBackgroundColor({...backgroundColor, color: '#61658f'});\r\n        }\r\n\r\n    },[message]);\r\n\r\n    return (\r\n        <Grid style={{ display: \"flex\", justifyContent: justifyContentVal }} item xs={12} sm={12} md={12}>    \r\n            <Typography className=\"messageBox\" style={{ background: backgroundColor.color}}>\r\n                    {message.content}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Messages;","import { CircularProgress, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMessages } from '../../actions/chat/message';\r\nimport Messages from './Messages.js';\r\nimport ReactScrollableFeed from 'react-scrollable-feed';\r\nimport io from 'socket.io-client';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n    scrollFeed: {\r\n      height: 200,\r\n      backgroundColor: '#e0e0e0'\r\n    },\r\n    Label: {\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n      padding: '11px 11px 11px 11px'\r\n    }\r\n\r\n  \r\n  });\r\n\r\n  let socket = io('localhost:5555');\r\n\r\nconst Message = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector((state) => state.messages);\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    useEffect(() => {\r\n        if(conversation_data.conversation_id !== undefined) {\r\n       \r\n            dispatch(getMessages(conversation_data.conversation_id));\r\n          \r\n        }\r\n\r\n    },[]);\r\n\r\n\r\n    const [typing, SetTyping] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n            socket.on('typing-activated', data => {\r\n            SetTyping(data);\r\n            console.log('[MESSAGE] socket.on.typing-activated-data: ', data);\r\n            })\r\n    },[typing])\r\n\r\n    const [emitMessageRespond, setEmitMessageRespond] = useState(0);\r\n    useEffect(() => {\r\n\r\n        if(conversation_data.conversation_id !== undefined) {\r\n          console.log('CHEKIRAWWWWWT: ', conversation_data.conversation_id);\r\n          dispatch(getMessages(conversation_data.conversation_id));\r\n\r\n          }\r\n\r\n      socket.on('updateMessage', data => {\r\n        console.log('[MESSAGE]: socket-on-updateMessage ', data);\r\n        setEmitMessageRespond(data);\r\n    });\r\n\r\n    }, [emitMessageRespond])\r\n\r\n    return(\r\n        <>\r\n          <Typography className={classes.Label}> \r\n\r\n            CONVERSATION WITH : &nbsp;&nbsp; \r\n          \r\n            {!conversation_data?.conversation_with?.name?.length \r\n                ? conversation_data.conversation_name \r\n                : conversation_data?.conversation_with?.name\r\n            }\r\n            </Typography>\r\n\r\n          {!messages?.length ? <CircularProgress /> : (\r\n              <ReactScrollableFeed className={classes.scrollFeed}>\r\n                    {messages.map((message) => (\r\n                        <Grid key={message._id} container item xs={12} sm={12} md={12}>\r\n                            <Messages message={message}/>\r\n                        </Grid>\r\n                    ))}          \r\n                </ReactScrollableFeed>\r\n          )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Grid, Paper, Typography, Link } from '@material-ui/core';\r\nimport { getUsers } from '../../actions/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConversationWith, resetConversationData } from '../../actions/chat/conversation'\r\nimport {  resetMessages } from '../../actions/chat/message'\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      overflowY: 'auto',\r\n      backgroundColor: '#fda01d',\r\n   \r\n      padding: '11px 11px 11px 11px'\r\n    },\r\n    userLink: {\r\n        display: 'flex'\r\n    },\r\n    Label: {\r\n        display: 'flex',\r\n        fontWeight: 'bold'\r\n    }\r\n\r\n  });\r\n\r\n\r\nconst UserList = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userlist = useSelector((state) => state.users)\r\n    const conversation_data = useSelector(state => state.conversation_data)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n    },[]);\r\n\r\n    const [participants, setParticipants] = useState({ name: '', id: ''});\r\n\r\n\r\n     useEffect(() => {\r\n         if(participants.length !== 0 || participants !== undefined) {\r\n            //REDUX: Reset the conversation_data when clicking on userlist\r\n            //this reset must go 1st.\r\n            //TODO/TOASK: refactor => w/c is more optimized. reset the whole objects or modify/set the specific props/field *Performance\r\n            dispatch(resetConversationData());\r\n\r\n\r\n            dispatch(setConversationWith(participants));\r\n            dispatch(resetMessages());\r\n           //todo: check if the participants has conversation if null reset the message component into new OR =>\r\n           //optimize userList => show only the user that has no conversation at all to current user logged in\r\n\r\n\r\n         }\r\n\r\n\r\n\r\n     },[participants])\r\n\r\n    return (        \r\n        !userlist?.length ? <CircularProgress /> : (                        \r\n                    <Grid container className={classes.mainContainer} component={Paper} >\r\n                        <Typography className={classes.Label}>List of users</Typography> \r\n                        {userlist.map((user) => (\r\n                            <Link key={user._id} className={classes.userLink} component=\"button\"  onClick={() => setParticipants({name: user.firstname, id: user._id})}>\r\n                               <Typography > { user.firstname }  </Typography>                     \r\n                            </Link>                    \r\n                        ))}            \r\n                    </Grid>              \r\n            )\r\n    );\r\n}\r\n\r\nexport default UserList","import React, { useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { createMessage } from '../../actions/chat/message';\r\nimport { createConversationAndMessage } from '../../actions/chat/conversation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket = io('localhost:5555');\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    sendButton : {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n      },\r\n      messageTextfield : {\r\n        margin: '22px 11px 11px 11px'\r\n      },\r\n\r\n  });\r\n\r\nconst Input = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const conversation_data = useSelector((state) => state.conversation_data);\r\n\r\n    console.log('conversation_data: ', conversation_data);\r\n\r\n    const [messsageData, setMessageData] = useState({ owner: '', conversationId : '', content: ''});\r\n\r\n    const [keyPressCount, setKeyPressCount] = useState(0);\r\n    \r\n    //TODO: change this code into const var, useState no need\r\n     const [conAndMsgData] = useState({\r\n      conversation:{\r\n        participants: [], name: '', lastMessageId: 333\r\n      },\r\n      messages: {\r\n        owner: '', conversationId : '', content: ''\r\n      }\r\n     })\r\n\r\n     const [myMessage, setMyMessage] = useState('');\r\n     const conversationId = conversation_data?.conversation_id; \r\n\r\n     const clear = () => {\r\n      setMyMessage('');\r\n     }\r\n  \r\n    const handleMessage = async message => {\r\n        if(conversation_data.conversation_with === undefined) {\r\n          setMessageData({ ...messsageData, content: message })     \r\n          setMyMessage(prev => message);\r\n          console.log('myMessagemyMessagemyMessage ', myMessage);\r\n        } else {\r\n          setMyMessage(message);\r\n      \r\n        }\r\n      };\r\n\r\n      const handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        clear();\r\n\r\n       if(conversation_data?.conversation_with === undefined) {\r\n\r\n          dispatch(createMessage({...messsageData, owner: userId, conversationId: conversation_data?.conversation_id}));\r\n       \r\n           socket.emit('sendMessage', { type: 'message' }, () => {\r\n                  console.log('[CHAT]: socket.io. emit/sendMessage');\r\n            });\r\n\r\n       } else if (conversation_data?.conversation_with !== undefined) {\r\n\r\n         dispatch(createConversationAndMessage(\r\n           {...conAndMsgData,  \r\n\r\n              conversation: {\r\n                participants: [userId, conversation_data?.conversation_with?.id], \r\n                name: `${conversation_data?.conversation_with?.name}`\r\n              },\r\n              messages: {\r\n                  owner: userId,\r\n                  content: myMessage\r\n              } \r\n           }\r\n          \r\n          ));\r\n\r\n            // create logic: add send_message_type: there are 2 types:\r\n            // 1: update conversation and message \r\n            // 2: message only\r\n           socket.emit('sendMessage', {type: 'conversation-message'});\r\n\r\n       } else {\r\n         console.log('[CHAT]: do nothing...')\r\n       }\r\n\r\n  };\r\n\r\n\r\n    const handleKeyPress = () => {\r\n\r\n      //when user is typing store the number of keypress in let as counter and use that let on logics ahead\r\n      //avoid the enter key here\r\n       setKeyPressCount(prev => prev + 1);\r\n\r\n      console.log('[INPUT] handleKeyPress: ', keyPressCount);\r\n\r\n      socket.emit('typing', { userId: userId, conversationId: conversationId });\r\n\r\n      socket.on('typing-activated', data => {\r\n        console.log('server response: ', data);\r\n      })\r\n    }\r\n\r\n    return (\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <TextField \r\n                    className={classes.messageTextfield} \r\n                    name=\"message\"\r\n                    variant=\"outlined\" \r\n                    label=\"Message\"\r\n                    fullWidth multiline rows={2} \r\n                    onChange={(e) => handleMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    value={myMessage}\r\n                />\r\n                <Button type=\"submit\" className={classes.sendButton} color=\"primary\" variant=\"contained\"> Send </Button>\r\n            </form>\r\n    )\r\n};\r\n\r\nexport default Input;","import { Grid, Grow, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Conversation from './Conversation';\r\nimport Message from './Message';\r\nimport { getConversation } from '../../actions/chat/conversation';\r\nimport UserList from './../User/UserList';\r\nimport Input from './Input';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  messageBody: {\r\n    padding: 10,\r\n  },\r\n  controller: {\r\n    padding: 10,\r\n  },\r\n \r\n  messageTextfield : {\r\n    margin: '22px 11px 11px 11px'\r\n  },\r\n  messagePaper : {\r\n    paddingTop: 30\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n\r\n  }\r\n\r\n});\r\n    \r\nconst Chat = () => {\r\n\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const userId = user?.result?._id;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const conversation = useSelector((state) => state.conversations);\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversation(userId));\r\n    },[]);\r\n\r\n  return (\r\n    <Grow in>\r\n    <Container>\r\n        <Grid className={classes.container} container>\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.userList} >\r\n                <UserList/>\r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4}  className={classes.userList} >\r\n                <Conversation /> \r\n           </Grid>\r\n\r\n           <Grid item xs={12} sm={12} md={12} lg={4} className={classes.controller}>\r\n \r\n                {conversation !== null ? <Message /> : null}\r\n                <Input />\r\n            </Grid>\r\n          </Grid>\r\n      </Container>\r\n      </Grow>\r\n  );\r\n}\r\n\r\nexport default Chat;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexWrap: 'wrap',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: '20px',\r\n    margin: '10px',\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: '20px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px', borderRadius: '15px', height: '39vh',\r\n  },\r\n}));","import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\n\r\nconst PostDetails = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPost(id))\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        if(post) {\r\n            // search is none because we are not looking for search, we are only looking for tags, thats what were going to use to recommend the post\r\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n        }\r\n    }, [post])\r\n\r\n    //check the post and isLoading, before rendering on bottom return\r\n    if(!post) return null;\r\n\r\n    if(isLoading) {\r\n        return <Paper elevation={6} className={classes.loadingPaper}>\r\n            <CircularProgress size=\"7em\" />\r\n        </Paper>\r\n    }\r\n\r\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n    const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n    return (\r\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n            <div className={classes.card}>\r\n                <div className={classes.section}>\r\n                <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n                <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n                <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n                <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n                <Divider style={{ margin: '20px 0' }} />\r\n                <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n                <Divider style={{ margin: '20px 0' }} />\r\n                <Typography variant=\"body1\"><strong>Comments - coming soon!</strong></Typography>\r\n                <Divider style={{ margin: '20px 0' }} />\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n                </div>\r\n            </div>\r\n            {recommendedPosts.length && (\r\n                <div className={classes.section}>\r\n                    <Typography gutterBottom variant=\"h5\">You might also like</Typography>\r\n                    <Divider />\r\n                    <div className={classes.recommendedPosts}>\r\n                    {recommendedPosts.map(({ title, message, name, likes, selectedFile, _id}) => (\r\n                        <div style={{ margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\r\n                            <Typography gutterBottom variant=\"h6\">{title}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                            <img src={selectedFile} width=\"200px\" />\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PostDetails;","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\nimport Profile from './components/User/Profile';\nimport Chat from './components/Chat/Chat';\nimport PostDetails from './components/PostDetails/PostDetails';\n\nconst App = () => {\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  return (\n        <BrowserRouter>\n        <Container maxWidth=\"xl\"> \n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={() => <Redirect to=\"/posts\" />} />\n            <Route path=\"/posts\" exact component={Home}/>\n            <Route path=\"/posts/search\" exact component={Home}/>\n            <Route path=\"/posts/:id\"  component={PostDetails}/>\n            <Route path=\"/chat\" exact component={Chat} />\n            <Route path=\"/auth\" exact component={() => (!user ? <Auth /> : <Redirect to=\"/posts\" />)} />\n            <Route path=\"/user/profile\" exact component={Profile}/>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n  );\n}\n\n\n\nexport default App;\n","import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth.js';\nimport conversationsReducer from './chat/conversations.js';\nimport messagesReducer from './chat/messages.js';\nimport postsReducer from './posts.js';\nimport usersReducer from './users.js';\n\nimport conversationIdReducer from './chat/conversations-conversation-id.js';\n\nexport default combineReducers({ \n    auth: authReducer,\n    conversations: conversationsReducer,\n    conversation_data: conversationIdReducer,\n    messages: messagesReducer,\n    posts: postsReducer,\n    users: usersReducer\n\n});\n","import { FETCH_CONVERSATION, LOGOUT } from '../../constants/actionTypes';\r\n\r\nexport default (conversations = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_CONVERSATION: \r\n         return action.payload;\r\n      case LOGOUT:\r\n        return conversations = [];\r\n\r\n      default:\r\n        return conversations;\r\n    }\r\n  };\r\n  ","import {  SET_CONVERSATION_ID, LOGOUT, SET_CONVERSATION_WITH, RESET_CONVERSATION_DATA } from '../../constants/actionTypes';\r\n\r\nexport default (conversation_data = [], action) => {\r\n    switch (action.type) {\r\n        case SET_CONVERSATION_ID:\r\n            return action.payload\r\n        case SET_CONVERSATION_WITH:\r\n            console.log('SET_CONVERSATION_WITH::::::: ', conversation_data, '   ', action)\r\n            return {...conversation_data, conversation_with: action.payload}\r\n        case RESET_CONVERSATION_DATA:\r\n            console.log('RESET_CONVERSATION_DATA::::::: ', conversation_data, '   ', action)\r\n            return conversation_data = []\r\n        case LOGOUT:\r\n            return conversation_data = []\r\n      default:\r\n        return conversation_data;\r\n    }\r\n  };\r\n  ","import { FETCH_MESSAGES, LOGOUT, RESET_MESSAGES } from '../../constants/actionTypes';\r\n\r\nexport default (messages = [], action) => {\r\n    switch (action.type) {\r\n      case FETCH_MESSAGES:\r\n        return action.payload;\r\n      case RESET_MESSAGES:\r\n        return messages = [];\r\n      case LOGOUT:\r\n        return messages = [];\r\n      default:\r\n        return messages;\r\n    }\r\n  };","import _ from 'lodash';\nimport { FETCH_POSTS, FETCH, CREATE, UPDATE, DELETE, LIKE , LOGOUT, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: []}, action) => {\n  //console.log('client/src/reducers/chat/posts/action.payload: ', action.payload,'\\n','client/src/reducers/chat/posts/posts: ', posts);\n  switch (action.type) {\n\n    case START_LOADING: \n      return {...state, isLoading: true }\n\n    case END_LOADING: \n      return {...state, isLoading: false }\n    case FETCH:\n      return { ...state, post: action.payload};\n\n    case FETCH_POSTS:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      }\n\n    case FETCH_BY_SEARCH:\n        return { ...state, posts: action.payload};\n\n    case LIKE:\n      return { ... state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload]};\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)};\n\n    case LOGOUT:\n        return state;\n\n    default:\n      return state;\n  }\n};\n\n","import { UPDATE, FETCH_USERS } from '../constants/actionTypes';\r\n\r\nexport default (users = [], action) => {\r\n   // console.log('client/src/reducers/chat/users action.payload: ', action.payload,'\\n','client/src/reducers/chat/users/users: ', users);\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return action.payload;        \r\n        case UPDATE: \r\n            return users.map((user) => (user._id === action.payload._id ? action.payload: user));\r\n\r\n        default:\r\n            return users; \r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducers from './reducers/index';\n// import { SocketContext, socket } from './context/socket'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n       <App />\n  </Provider>,\n  document.getElementById('root'),\n); \n"],"sourceRoot":""}